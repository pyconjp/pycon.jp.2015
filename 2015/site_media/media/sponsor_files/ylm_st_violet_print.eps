%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (dbg_08) ()%%Title: (ylm_st_h_c_p_en.eps)%%CreationDate: 10/04/23 17:58%%Canvassize: 16383%%BoundingBox: 91 286 504 556%%HiResBoundingBox: 91.9702 286.1426 503.3057 555.7451%%DocumentProcessColors: Cyan Magenta Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([\603\614\603W\603X\603g\603\614\601[\603V\603\607\603\623])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 127.2778 182.8291 467.998 664.7188%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 595.2754 841.8896%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -333 871.8887 0.8 1009 717 18 0 1 156 180 0 0%AI5_OpenViewLayers: 7%%PageOrigin:17.5 21.3896%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 84 8%%BeginData: 5990 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8A8FDFCFFFFFFFFA8FDFCFFFFFFFFA8FDFCFFFF%FFA8A8FDFCFFFFFFA8A8FDFCFFFFFFFFA8FDFCFFFFFFFFA8FDFCFFFFFFA8%A8FDFCFFFFFFA8A8FDFCFFFFFFFFA8FDFCFFFFFFFFA8FDFCFFFFFFA8A8FD%FCFFFFFFA8A8FDFCFFFFFFFFA8FDFCFFFFFFFFA8FDFCFFFFFFA8A8FD1BFF%A8A9A8FFA8FD78FFA8A27EA9A2A87EA27EFD5DFFA8A8FD17FF77A2A8A87E%7E7EA2A2A9777EFD05FFCB7EA2A8FFFFFFA8A27EA9FFA97EA27EA8FD04FF%7EA27EA2A8FFFFFF7EA27EA2A8FFFFFFA8A27EA87ECBFFFFFFA97EA2A8FF%FFCB7EA2A8FFFFFFA8A87EA27ECBFD2DFF77A9A277294D5353294D53CBA2%7EFD04FFA24D2977FFFFFF78284DA8FF534D294D28CBFFFFFF53294D2853%FFFF774D294D22A2FFFFFFA2294D284D7EFFFFFF772928A8FFFF7E4D287E%FFFFFFA8284D292977FD16FFA8FD15FF53A97729284D28A97E4D284D28A2%A27EFD04FF294D28CBFFFF29294DFFFF53284D284D7EFFFFFF284D284D28%FFFF77284D282977FFFFFF534D284D287EFFFFFF7E284D7EFFFF7E224D7D%FFFFFF7729284D2877FD2BFF7ECB784D29534D4DA8A229534D4D29A87EA9%FFFFFF7E294D7EFFA24D29A2FFFF4D534D5329A2FFFFFF534D532953A8FF%4D534D5329A2FFFFFF7829534D5353FFFFFF784D29A9FFFF7E4D29A2FFFF%FF7829534D4D4DFD16FFA8FD13FFA87E7E4D4D53284D29A97E4D284D4D4D%28A977FFFFFFA24D2877FF78284DA8FFA24D2877294D53FFFFFF284D294D%28A2FF4D284D29297DFFFFFF294D53532853FFFFFF7E284D7EFFFF7E284D%7EFFFFFF4D4D5353284DA8FD29FFA2A8532853A8A2297EA8A94D53A2A228%4D77A97EFFFFFF4D4D4DCB4D4D53FFFFA229537E532953FFFFFF5329534D%4D77A94D4D2953297EFFFFA84D28A2534D29FFFFFF774D29A8FFFF7E4D28%A2FFFFA853297E534D4DA9FD14FFA8A8FD13FF7DA82853775353A8A87777%A97E774D7E284DA87EFFFFFF78224D4D4D227EFFFF534D4DA9284D29FFFF%FF294D4D5328537D4D2953284D7DFFFFA8284D7E78284D7EFFFF7E224D7E%FFFF7E282977FFFFA8284D7E7E284D7EFD28FFA8A97E4D4D7EA87E4DA9A9%FF7E537EA9535329A97EFFFFFFA24D4D4D2953A9FFFF782978FF782953A8%FFFF53297E534D4D782977535329A2FFFF7E4D4DFF7E4D29A2FFFF774D4D%534D534D5329A2FFFF7E4D4DFF7E4D297EFD14FFA8A8FD12FFA97E7E284D%28537EA8A8A2A2A9A27E294D284D7EA8A8FFFFFF294D294D4DFFFFFF284D%77FF534D28A8FFFF4D4D537E284D284D5377284D7EFFFF782853FFA22829%53FFFF7E284D284D284D29297DFFFF782853FFA8284D53FD28FFA8A97D4D%4D4D287EA2A97EA9A8A9534D4D4D28A9A2FD04FF78285329A2FFFFA84D28%A8FF7E284D7EFFFF53297E7E4D4D4D28A2774D28A2FFFF4D4D53FFA85329%77FFFF774D29534D534D53297EFFFF534D53FFA94D2853FD15FFA8FD12FF%A97E7E224D287EA853A2A9A87E53FF4D4D284D7EA2A9FFFFFF7E4D284DA8%FFFFA2284D53A9534D287EFFFF284D53A9284D284D7E7E282977FFA84D28%777E7E284D4DFFFF7E284D7EFFFF7E224D7DFFA84D28537EA2284D28FD29%FFA2A84D4DA9CBA97EA953A2A8A2A8FF7E4D4DCB7EFD04FFA929534DFFFF%FF7E4D4D53294D4D5353FFFF53297EFF534D534DFF774D29A2FFA929534D%4D29534D53A8FF784D29A9FFFF7E4D29A2FFFF4D53294D29532953A8FD14%FFA8FD13FF7EA94D7EA853284D777E7D53284D77FF537E7EA8FD04FFA84D%284DA8FFFF77284D284D284D2853FFFF284D53FF534D284DA97828297DFF%7E29284D2829284D28A8FF7E284D7EFFFF7E284D7EFF7E4D294D284D284D%28A8FD28FFCB7EA9294D294D287E7EA2534D4D4D2853A87EFD05FFA94D4D%29FFFFFF4D4D4DA27EA24D4D29FFFF53287EFF7E284D53FF534D29A2FF7E%294D77A27E77284D7EFF774D29A8FFFF7E4D28A2FF7E285378A27E78294D%77FD13FFA8A8FD14FF7EA27E224D2829777E7E77284D28297EA27EFD05FF%A24D284DA8FFA84D227EFFFFFF77284D7EFF292953FF7E29227EFF77284D%7EFF4D4D4DFFFFFF7E29287EFF7E224D7EFFFF7E28297DFF532928FFFFFF%7E4D2877FD2AFF7EA8A2294D297853784D532953A8A97EFD06FFA94D4D4D%FFFFA9294D7EFFFFFF7E4D29A2FF53297EFFFF5378A8FF534D29A2FF5329%78FFFFFFA9294D53FF774D29A8FFFF7E4D28A2FF532978FFFFFFCB4D4D53%FD13FFA8A8FD15FFA97E7EA9534D284D284D287EA8A277FD07FFA24D284D%A8FF772928A8FFFFFFA2282953FF292953FD06FF5322297ECB282977FFFF%FFA84D2253FF7E224D7EFFFF7E22297DFF282953FFFFFFA84D284DA8FD2B%FFA27EA9A8A87EA8A2A9A27EA2FD09FF7EA8A2FFFFCB7EA8A9FFFFFFA8A8%7EA9FFA97EA9FD06FFA8A87EFFFFA87EFD05FFA2A87EFFA8A27EFFFFFFA8%A87EFFCBA87EA9FD04FFA2A8A2FD14FFA8FD18FFA97D7E7EA27EA27DA2A8%FD7AFFA9FD62FFA8FDFCFFFFFFA8A8FDFCFFFFFFA8A8FDFCFFFFFFFFA8FD%FCFFFFFFFFA8FDFCFFFFFFA8A8FDFCFFFFFFA8A8FDFCFFFFFFFFA8FDFCFF%FFFFFFA8FDFCFFFFFFA8A8FDFCFFFFFFA8A8FDFCFFFFFFFFA8FDFCFFFFFF%FFA8FDFCFFFFFFA8A8FDFCFFFFFFA8A8FDFCFFFFFFFFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (\203g\203\214\201[\203X) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe \203G\203\223\203x\203\215\201[\203v\203v\203\211\203O\203C\203\223) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe \203\211\203C\203u\203y\203C\203\223\203g\203v\203\211\203O\203C\203\223) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe \203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203v\203\211\203O\203C\203\223) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe \203V\203\223\203{\203\213) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp4 Bn%AI5_BeginGradient: (\603C\603G\603\615\601[\601\625\603I\603\614\603\623\603W)(\603C\603G\603\615\601[\601\625\603I\603\614\603\623\603W) 1 2 Bd[0<0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C><FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E6>01 %_Br[0 0 1 0 1 52 19 %_BS%_0 0 1 0 1 52 19 Bs0 0.55 0.9 0 1 50 100 %_BS%_0 0.55 0.9 0 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (\603N\603\615\603\600)(\603N\603\615\603\600) 0 6 Bd[0<464646454545444444444343434342424241414141404040403F3F3F3E3E3E3E3D3D3D3C3C3C3C3B3B3B3B3A3A3A393939393838383837373736363636353535353434343333333332323231313131303030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2B2B2B2B2A2A2A2A2929292828282827272726262626252525252424242323232322222222212121202020201F1F1F1F1E1E1E1D1D1D1D1C1C1C1B1B1B1B1A1A1A1A1919191818181817171717161616151515151414141413131312121212111111101010100F0F0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0A0A0A0A0909090908080807070707060606050505050404040403030302020202010101010000><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><1F1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A19191919191919191818181818181818181717171717171717161616161616161615151515151515151514141414141414141313131313131313121212121212121212111111111111111110101010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0909090909090909090808080808080808070707070707070706060606060606060605050505050505050404040404040404030303030303030303020202020202020201010101010101010000000000>1 %_Br00.2751<6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F>1 %_Br0<00000101010102020202030303040404040505050506060607070707080808090909090A0A0A0A0B0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F0F0F1010101011111112121212131313141414141515151516161617171717181818181919191A1A1A1A1B1B1B1C1C1C1C1D1D1D1D1E1E1E1F1F1F1F2020202021212122222222232323232424242525252526262626272727282828282929292A2A2A2A2B2B2B2B2C2C2C2D2D2D2D2E2E2E2E2F2F2F303030303131313132323233333333343434353535353636363637373738383838393939393A3A3A3B3B3B3B3C3C3C3D3D3D3D3E3E3E3E3F3F3F40404040414141414242424343434344444444454545464646><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><00000101020203030304040505050606070708080809090A0A0A0B0B0C0C0D0D0D0E0E0F0F1010101111121212131314141515151616171718181819191A1A1A1B1B1C1C1D1D1D1E1E1F1F1F20202121222222232324242525252626272727282829292A2A2A2B2B2C2C2D2D2D2E2E2F2F2F30303131323232333334343435353636373737383839393A3A3A3B3B3C3C3C3D3D3E3E3F3F3F4040414142424243434444444545464647474748484949494A4A4B4B4C4C4C4D4D4E4E4F4F4F5050515151525253535454545555565657575758585959595A5A5B5B5C5C5C5D5D5E5E5E5F5F6060616161626263636464646565666666676768686969696A6A6B6B>1 %_Br10 %_Br<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><4D4C4C4C4B4B4B4A4A4A4A4949494848484747474746464645454544444444434343424242414141414040403F3F3F3E3E3E3E3D3D3D3C3C3C3B3B3B3B3A3A3A3939393838383837373736363635353535343434333333323232323131313030302F2F2F2E2E2E2E2D2D2D2C2C2C2C2B2B2B2A2A2A2929292928282827272726262625252525242424232323222222222121212020201F1F1F1F1E1E1E1D1D1D1C1C1C1C1B1B1B1A1A1A191919191818181717171616161615151514141413131313121212111111101010100F0F0F0E0E0E0D0D0D0D0C0C0C0B0B0B0A0A0A0A0909090808080707070706060605050504040404030303020202010101010000>001 %_Br[1 0 50 92 %_BS%_1 0 50 92 Bs0 0.275 1 0.12 1 50 59 %_BS%_0 0.275 1 0.12 1 50 59 Bs0 0.275 1 0.42 1 50 50 %_BS%_0 0.275 1 0.42 1 50 50 Bs1 0 50 49 %_BS%_1 0 50 49 Bs1 0 50 41 %_BS%_1 0 50 41 Bs1 0.3 0 0 1 50 0 %_BS%_1 0.3 0 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (\603u\603\611\603b\603N\601A\603z\603\617\603C\603g)(\603u\603\611\603b\603N\601A\603z\603\617\603C\603g) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (\623\770)(\623\770) 0 6 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>1001 %_Br1<0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>001 %_Br1<00000000000000000000000000000000000001010101010101010101010101010101010101010101010101010101010101010101010102020202020202020202020202020202020202020202020202020202020202020202020203030303030303030303030303030303030303030303030303030303030303030303030304040404040404040404040404040404040404040404040404040404040404040404040405050505050505050505050505050505050505050505050505050505050505050505050506060606060606060606060606060606060606060606060606060606060606060606060707070707070707070707070707070707070707070707><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>01 %_Br<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>0101 %_Br0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>101 %_Br[0 1 0 0 1 50 100 %_BS%_0 1 0 0 1 50 100 Bs1 1 0 0 1 50 80 %_BS%_1 1 0 0 1 50 80 Bs1 0.0279 0 0 1 50 60 %_BS%_1 0.0279 0 0 1 50 60 Bs1 0 1 0 1 50 40 %_BS%_1 0 1 0 1 50 40 Bs0 0 1 0 1 50 20 %_BS%_0 0 1 0 1 50 20 Bs0 1 1 0 1 50 0 %_BS%_0 1 1 0 1 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (\603X\603g\603\611\603C\603v)(\603X\603g\603\611\603C\603v) 8.45 4.6001 80.45 76.6001 [%AI3_Tile(0 O 0 R 1 0.07 1 0 k 1 0.07 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 3.6 w 4 M []0 d0 XR8.2 8.2 m80.7 8.2 LS8.2 22.6001 m80.7 22.6001 LS8.2 37.0002 m80.7 37.0002 LS8.2 51.4 m80.7 51.4 LS8.2 65.8001 m80.7 65.8001 LS8.2 15.4 m80.7 15.4 LS8.2 29.8001 m80.7 29.8001 LS8.2 44.2 m80.7 44.2 LS8.2 58.6001 m80.7 58.6001 LS8.2 73.0002 m80.7 73.0002 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (\603\614\603\623\603K)(\603\614\603\623\603K) 0 0 72 72 [%AI3_Tile(0 O 0 R 0.3 0.85 0.85 0 k 0.3 0.85 0.85 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR0 0 m0 72 L72 72 L72 0 L0 0 Lf%AI6_EndPatternLayer) &(0 O 0 R 1 g 1 G) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR0 68.4097 m72 68.4097 lS0 61.209 m72 61.209 LS0 54.0088 m72 54.0088 LS0 46.8076 m72 46.8076 LS0 39.6084 m72 39.6084 LS0 32.4072 m72 32.4072 LS0 25.207 m72 25.207 LS0 18.0059 m72 18.0059 LS0 10.8057 m72 10.8057 LS0 3.6064 m72 3.6064 LS68.4102 68.4097 m68.4102 61.2217 lS54.0098 68.4097 m54.0098 61.2217 LS39.6094 68.4097 m39.6094 61.2217 LS25.21 68.4097 m25.21 61.2217 LS10.8105 68.4097 m10.8105 61.2217 LS68.4102 53.9717 m68.4102 46.7842 lS54.0098 53.9717 m54.0098 46.7842 LS39.6094 53.9717 m39.6094 46.7842 LS25.21 53.9717 m25.21 46.7842 LS10.8105 53.9717 m10.8105 46.7842 LS68.4102 39.5967 m68.4102 32.4092 lS54.0098 39.5967 m54.0098 32.4092 LS39.6094 39.5967 m39.6094 32.4092 LS25.21 39.5967 m25.21 32.4092 LS10.8105 39.5967 m10.8105 32.4092 LS68.4102 25.2217 m68.4102 18.0342 lS54.0098 25.2217 m54.0098 18.0342 LS39.6094 25.2217 m39.6094 18.0342 LS25.21 25.2217 m25.21 18.0342 LS10.8105 25.2217 m10.8105 18.0342 LS68.4102 10.7842 m68.4102 3.5967 lS54.0098 10.7842 m54.0098 3.5967 LS39.6094 10.7842 m39.6094 3.5967 LS25.21 10.7842 m25.21 3.5967 LS10.8105 10.7842 m10.8105 3.5967 LS61.1973 3.5967 m61.1973 0 LS46.7969 3.5967 m46.7969 0 LS32.3965 3.5967 m32.3965 0 LS17.9971 3.5967 m17.9971 0 LS3.5967 3.5967 m3.5967 0 lS61.1973 18.0342 m61.1973 10.8467 LS46.7969 18.0342 m46.7969 10.8467 LS32.3965 18.0342 m32.3965 10.8467 LS17.9971 18.0342 m17.9971 10.8467 LS3.5967 18.0342 m3.5967 10.8467 lS61.1973 32.4092 m61.1973 25.2217 LS46.7969 32.4092 m46.7969 25.2217 LS17.9971 32.4092 m17.9971 25.2217 LS3.5967 32.4092 m3.5967 25.2217 lS61.1973 46.7842 m61.1973 39.5967 LS46.7969 46.7842 m46.7969 39.5967 LS32.3965 46.7842 m32.3965 39.5967 LS17.9971 46.7842 m17.9971 39.5967 LS3.5967 46.7842 m3.5967 39.5967 lS61.1973 61.2217 m61.1973 54.0347 LS46.7969 61.2217 m46.7969 54.0347 LS32.3965 61.2217 m32.3965 54.0347 LS17.9971 61.2217 m17.9971 54.0347 LS3.5967 61.2217 m3.5967 54.0347 lS61.1973 71.959 m61.1973 68.4717 LS46.7969 71.959 m46.7969 68.4717 LS32.3965 71.959 m32.3965 68.4717 LS17.9971 71.959 m17.9971 68.4717 LS3.5967 71.959 m3.5967 68.4717 lS32.3965 32.4092 m32.3965 25.2217 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (\616\606\602\723\602\724\602\653)(\616\606\602\723\602\724\602\653) 4.85 3.617 76.85 75.617 [%AI3_Tile(0 O 0 R 1 g 1 G) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR4.85 3.617 m4.85 75.617 L76.85 75.617 L76.85 3.617 L4.85 3.617 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 g 0 G) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR10.6 64.867 m7.85 62.867 lS9.1 8.617 m6.85 6.867 lS78.1 68.617 m74.85 67.867 lS76.85 56.867 m74.35 55.117 lS79.6 51.617 m76.6 51.617 lS76.35 44.117 m73.6 45.867 lS78.6 35.867 m76.6 34.367 lS76.1 23.867 m73.35 26.117 lS78.1 12.867 m73.85 13.617 lS68.35 14.617 m66.1 12.867 lS76.6 30.617 m73.6 30.617 lS62.85 58.117 m60.956 60.941 lS32.85 59.617 m31.196 62.181 lS47.891 64.061 m49.744 66.742 lS72.814 2.769 m73.928 5.729 lS67.976 2.633 m67.35 5.909 lS61.85 27.617 m59.956 30.441 lS53.504 56.053 m51.85 58.617 lS52.762 1.779 m52.876 4.776 lS45.391 5.311 m47.244 7.992 lS37.062 3.375 m35.639 5.43 lS55.165 34.828 m57.518 37.491 lS20.795 3.242 m22.12 5.193 lS14.097 4.747 m15.008 8.965 lS9.736 1.91 m8.073 4.225 lS31.891 5.573 m32.005 8.571 lS12.1 70.367 m15.6 68.867 lS9.35 54.867 m9.6 58.117 lS12.85 31.867 m14.35 28.117 lS10.1 37.367 m12.35 41.117 lS34.1 71.117 m31.85 68.617 lS38.35 71.117 m41.6 68.367 lS55.1 71.117 m58.35 69.117 lS57.35 65.117 m55.35 61.867 lS64.35 66.367 m69.35 68.617 lS71.85 62.867 m69.35 61.117 lS23.6 70.867 m23.6 67.867 lS20.6 65.867 m17.35 65.367 lS24.85 61.367 m25.35 58.117 lS25.85 65.867 m29.35 66.617 lS14.1 54.117 m16.85 56.117 lS12.35 11.617 m12.6 15.617 lS12.1 19.867 m14.35 22.367 lS26.1 9.867 m23.6 13.367 lS34.6 47.117 m32.1 45.367 lS62.6 41.867 m59.85 43.367 lS31.6 35.617 m27.85 36.367 lS36.35 26.117 m34.35 24.617 lS33.85 14.117 m31.1 16.367 lS37.1 9.867 m35.1 11.117 lS34.35 20.867 m31.35 20.867 lS44.6 56.617 m42.1 54.867 lS47.35 51.367 m44.35 51.367 lS44.1 43.867 m41.35 45.617 lS43.35 33.117 m42.6 30.617 lS43.85 23.617 m41.1 25.867 lS44.35 15.617 m42.35 16.867 lS67.823 31.1 m64.823 31.1 lS27.1 32.617 m29.6 30.867 lS31.85 55.117 m34.85 55.117 lS19.6 40.867 m22.1 39.117 lS16.85 35.617 m19.85 35.617 lS20.1 28.117 m22.85 29.867 lS52.1 42.617 m54.484 44.178 lS52.437 50.146 m54.821 48.325 lS59.572 54.133 m59.35 51.117 lS50.185 10.055 m53.234 9.928 lS51.187 15.896 m53.571 14.075 lS58.322 19.883 m59.445 16.823 lS53.1 32.117 m50.6 30.367 lS52.85 24.617 m49.6 25.617 lS61.85 9.117 m59.1 10.867 lS69.35 34.617 m66.6 36.367 lS67.1 23.617 m65.1 22.117 lS24.435 46.055 m27.484 45.928 lS25.437 51.896 m27.821 50.075 lS62.6 47.117 m65.321 46.575 lS19.85 19.867 m20.35 16.617 lS21.85 21.867 m25.35 22.617 lS37.6 62.867 m41.6 62.117 lS38.323 42.1 m38.823 38.6 lS69.35 52.617 m66.85 53.867 lS14.85 62.117 m18.1 59.367 lS9.6 46.117 m7.1 44.367 lS20.6 51.617 m18.6 50.117 lS46.141 70.811 m47.994 73.492 lS69.391 40.561 m71.244 43.242 lS38.641 49.311 m39.35 52.117 lS25.141 16.811 m25.85 19.617 lS36.6 32.867 m34.6 31.367 lS6.1 68.617 m2.85 67.867 lS4.85 56.867 m2.35 55.117 lS7.6 51.617 m4.6 51.617 lS6.6 35.867 m4.6 34.367 lS6.1 12.867 m1.85 13.617 lS4.6 30.617 m1.6 30.617 lS72.814 74.769 m73.928 77.729 lS67.976 74.633 m67.35 77.909 lS52.762 73.779 m52.876 76.776 lS37.062 75.375 m35.639 77.43 lS20.795 75.242 m22.12 77.193 lS9.736 73.91 m8.073 76.225 lS10.1 23.617 m6.35 24.367 lS73.217 18.276 m71.323 21.1 lS28.823 39.6 m29.505 42.389 lS49.6 38.617 m47.6 37.117 lS60.323 73.6 m62.323 76.6 lS60.323 1.6 m62.323 4.6 lS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (\627\616\602\677\627t)(\627\616\602\677\627t) 0 0 64.0781 78.9336 [%AI3_Tile(0 O 0 R 0.05 0.2 1 0 k 0.05 0.2 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR64.0781 78.9336 m64.0781 0 L0 0 L0 78.9336 L64.0781 78.9336 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.83 0 1 0 k 0.83 0 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR29.7578 0.9902 m30.4346 1.1914 30.7246 1.3428 V29.2559 4.0547 33.707 8.3359 34.627 9.0762 C35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 Cf13.8525 29.9844 m13.3281 29.5127 13.1309 29.25 V15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C7.2256 14.5 9.2598 15.6133 10.166 15.5645 C10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C8.1875 11.041 9.207 9.5107 10.166 7.0947 C10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C15.373 24.3779 15.373 27.2959 13.8525 29.9844 Cf41.2324 26.0742 m41.5518 26.7021 41.7549 26.959 V44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C46.3408 31.123 45.4395 33.084 44.2402 34.126 C45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C49.749 24.9766 50.584 26.9941 50.25 28.4609 C45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 Cf27.7578 38.7324 m28.4346 38.9316 28.7246 39.084 V27.2559 41.7969 31.707 46.0776 32.627 46.8169 C33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C38.002 44.582 37.3359 46.0547 36.5742 47.5039 C37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C30.7373 55.5146 30.166 54.314 29.2969 53.0366 C30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C30.9775 50.46 29.2852 51.2036 28.793 52.1958 C28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 Cf13.5195 70.3916 m12.9941 69.9209 12.7988 69.6587 V15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C7.8545 51.4497 8.873 49.9189 9.832 47.5039 C10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C15.041 64.7856 15.041 67.7046 13.5195 70.3916 Cf41.2324 64.4824 m41.5518 65.1113 41.7549 65.3682 V44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C51.2881 60.583 50.4268 61.8882 48.5645 62.333 C49.749 63.3862 50.584 65.4033 50.25 66.8691 C45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 Cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(New Pattern 1)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7842.75 8611.8896 m-7842.75 8587.8896 L-7892.75 8587.8896 L-7892.75 8611.8896 L-7842.75 8611.8896 Lnu0 Ap0 O1 g-7862.75 8609.8896 m-7874.96 8612.9424 -7883.4434 8602.9502 -7892.75 8595.8408 CF-7852.75 8609.8896 m-7869.1279 8613.9834 -7878.8008 8594.6113 -7892.75 8590.2041 CF-7892.75 8589.8896 m-7872.75 8584.8896 -7862.75 8614.8896 -7842.75 8609.8896 CF-7882.75 8589.8896 m-7866.3721 8585.7949 -7856.6992 8605.167 -7842.75 8609.5742 CF-7872.75 8589.8896 m-7860.54 8586.8369 -7852.0566 8596.8281 -7842.75 8603.9385 CF-7852.75 8589.8896 m-7849.1279 8588.9834 -7845.8354 8589.2305 -7842.75 8590.2041 CF-7882.75 8609.8896 m-7886.3721 8610.7949 -7889.6655 8610.5488 -7892.75 8609.5742 CF-7852.7817 8590.0146 m-7858.9009 8588.5059 -7862.7817 8590.0146 V-7866.8774 8588.5381 -7872.7817 8590.0146 V-7877.7446 8588.3389 -7882.7817 8590.0146 V-7888.7969 8588.4639 -7892.7817 8590.0146 V-7892.7817 8609.6992 L-7889.6958 8610.6738 -7886.2969 8610.8809 -7882.3799 8609.7979 C-7876.2134 8611.3809 -7872.4634 8609.7979 V-7867.4634 8611.3809 -7862.3799 8609.7139 V-7858.0474 8611.2979 -7852.3799 8609.7979 V-7846.8799 8611.2139 -7842.7817 8610.0146 V-7842.7817 8590.3301 L-7845.5254 8589.3184 -7848.6514 8588.8184 -7852.7817 8590.0146 Cf0 R0 G1 J 1 j 0.5 w-7872.75 8609.8896 m-7880.54 8611.8369 -7886.8135 8608.4746 -7892.75 8603.9385 CS-7862.75 8609.8896 m-7874.96 8612.9424 -7883.4434 8602.9502 -7892.75 8595.8408 CS-7852.75 8609.8896 m-7869.1279 8613.9834 -7878.8008 8594.6113 -7892.75 8590.2041 CS-7892.75 8589.8896 m-7872.75 8584.8896 -7862.75 8614.8896 -7842.75 8609.8896 CS-7882.75 8589.8896 m-7866.3721 8585.7949 -7856.6992 8605.167 -7842.75 8609.5742 CS-7872.75 8589.8896 m-7860.54 8586.8369 -7852.0566 8596.8281 -7842.75 8603.9385 CS-7862.75 8589.8896 m-7854.96 8587.9424 -7848.6875 8591.3047 -7842.75 8595.8408 CS-7852.75 8589.8896 m-7849.1279 8588.9834 -7845.8354 8589.2305 -7842.75 8590.2041 CS-7882.75 8609.8896 m-7886.3721 8610.7949 -7889.6655 8610.5488 -7892.75 8609.5742 CSUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 10)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7892 8610.8896 m-7841.8921 8610.8896 L-7841.8921 8554.8652 L-7892 8554.8652 L-7892 8610.8896 Lnu0 O0.1 1 1 0 k-7854.9014 8576.4648 m-7856.7178 8569.9854 -7866.8247 8573.3555 Y-7866.7915 8573.4199 L-7876.8999 8570.0508 -7878.7144 8576.5293 V-7884.6758 8593.8965 -7879.4922 8600.6348 V-7872.7529 8610.2266 -7868.6055 8610.2266 V-7865.0103 8610.1602 L-7860.8638 8610.1602 -7854.1255 8600.5713 Y-7848.9409 8593.832 -7854.9014 8576.4648 Yfu0 0 0 1 k-7859.3926 8554.8652 m-7860.1167 8556.3096 -7860.9238 8557.3643 V-7860.4058 8556.9521 -7859.5151 8556.082 -7859.3926 8554.8652 Cf-7873.0645 8557.375 m-7873.8711 8556.3193 -7874.5942 8554.876 Y-7874.4727 8556.0918 -7873.5825 8556.9629 -7873.0645 8557.375 CfU0 0.61 0.74 0 k-7858.5977 8579.3506 m-7859.9038 8574.6855 -7867.1816 8577.1113 Y-7867.1567 8577.1582 L-7874.4365 8574.7324 -7875.7417 8579.3975 V-7880.0337 8591.9014 -7876.3018 8596.7529 V-7871.4487 8603.6582 -7868.4634 8603.6582 V-7865.8755 8603.6113 L-7862.8887 8603.6113 -7858.0366 8596.707 Y-7854.3042 8591.8535 -7858.5977 8579.3506 Yfu1 Ap0.73 0.43 1 0.22 k0 R0 0 0 1 K-7862.6226 8582.165 m-7861.8135 8582.165 -7861.1558 8581.5078 -7861.1558 8580.6992 c-7861.1558 8579.8896 -7861.8135 8579.2314 -7862.6226 8579.2314 c-7863.4321 8579.2314 -7864.0889 8579.8896 -7864.0889 8580.6992 c-7864.0889 8581.5078 -7863.4321 8582.165 -7862.6226 8582.165 cb-7862.3638 8593.8857 m-7861.0806 8593.8857 -7860.0415 8593.0098 -7860.0415 8591.9307 c-7860.0415 8590.8506 -7861.0806 8589.9766 -7862.3638 8589.9766 c-7863.6455 8589.9766 -7864.6846 8590.8506 -7864.6846 8591.9307 c-7864.6846 8593.0098 -7863.6455 8593.8857 -7862.3638 8593.8857 cb-7861.8345 8605.6758 m-7860.2817 8605.6758 -7859.0239 8605.0186 -7859.0239 8604.2109 c-7859.0239 8603.4014 -7860.2817 8602.7441 -7861.8345 8602.7441 c-7863.3862 8602.7441 -7864.6455 8603.4014 -7864.6455 8604.2109 c-7864.6455 8605.0186 -7863.3862 8605.6758 -7861.8345 8605.6758 cb-7857.6104 8577.416 m-7856.8687 8577.416 -7856.2671 8576.7041 -7856.2671 8575.8262 c-7856.2671 8574.9482 -7856.8687 8574.2373 -7857.6104 8574.2373 c-7858.3535 8574.2373 -7858.9546 8574.9482 -7858.9546 8575.8262 c-7858.9546 8576.7041 -7858.3535 8577.416 -7857.6104 8577.416 cb-7856.0034 8598.9727 m-7856.8818 8598.625 -7857.1494 8597.2246 -7856.6035 8595.8438 c-7856.0566 8594.4648 -7854.9014 8593.626 -7854.0234 8593.9746 c-7853.1455 8594.3223 -7852.8774 8595.7227 -7853.4233 8597.1025 c-7853.9702 8598.4844 -7855.1255 8599.3213 -7856.0034 8598.9727 cbu-7871.0566 8582.0488 m-7871.8662 8582.0488 -7872.5239 8581.3916 -7872.5239 8580.583 c-7872.5239 8579.7725 -7871.8662 8579.1162 -7871.0566 8579.1162 c-7870.2485 8579.1162 -7869.5913 8579.7725 -7869.5913 8580.583 c-7869.5913 8581.3916 -7870.2485 8582.0488 -7871.0566 8582.0488 cb-7871.3159 8593.7695 m-7872.5991 8593.7695 -7873.6382 8592.8945 -7873.6382 8591.8145 c-7873.6382 8590.7344 -7872.5991 8589.8594 -7871.3159 8589.8594 c-7870.0342 8589.8594 -7868.9951 8590.7344 -7868.9951 8591.8145 c-7868.9951 8592.8945 -7870.0342 8593.7695 -7871.3159 8593.7695 cb-7871.8457 8605.5605 m-7873.3975 8605.5605 -7874.6558 8604.9033 -7874.6558 8604.0938 c-7874.6558 8603.2832 -7873.3975 8602.6279 -7871.8457 8602.6279 c-7870.2935 8602.6279 -7869.0352 8603.2832 -7869.0352 8604.0938 c-7869.0352 8604.9033 -7870.2935 8605.5605 -7871.8457 8605.5605 cb-7876.0679 8577.2988 m-7876.8115 8577.2988 -7877.4121 8576.5879 -7877.4121 8575.7109 c-7877.4121 8574.834 -7876.8115 8574.123 -7876.0679 8574.123 c-7875.3262 8574.123 -7874.7241 8574.834 -7874.7241 8575.7109 c-7874.7241 8576.5879 -7875.3262 8577.2988 -7876.0679 8577.2988 cb-7877.6758 8598.8574 m-7876.7983 8598.5098 -7876.5298 8597.1084 -7877.0762 8595.7266 c-7877.6226 8594.3457 -7878.7778 8593.5098 -7879.6558 8593.8574 c-7880.5342 8594.2061 -7880.8032 8595.6074 -7880.2568 8596.9863 c-7879.7104 8598.3672 -7878.5552 8599.2041 -7877.6758 8598.8574 cbUU0 Ap0 0 0 1 k-7867.1318 8577.5449 m-7867.1318 8610.2041 lFu-7851.3906 8563.4199 m-7852.0815 8562.7266 -7855.0195 8563.5918 Y-7856.2295 8563.7637 -7856.0562 8566.1836 Y-7855.0195 8568.2578 -7855.7104 8568.084 Y-7856.2998 8568.084 -7857.8555 8568.0039 -7858.7822 8567.9521 C-7859.1226 8566.5586 -7860.6128 8565.3643 -7862.7217 8564.6592 C-7860.7578 8561.3672 -7862.5176 8560.6846 -7864.2935 8560.6797 C-7864.3096 8560.5918 -7864.3325 8560.5059 -7864.3599 8560.4229 C-7862.1089 8560.4688 -7861.6392 8558.1484 Y-7861.4048 8557.9521 -7861.1606 8557.6758 -7860.9238 8557.3643 C-7861.1416 8557.5361 -7861.2944 8557.6289 Y-7862.2583 8557.6289 -7863.8774 8559.3838 -7864.4966 8560.0967 C-7864.9194 8559.333 -7865.8535 8558.8008 -7866.9434 8558.8008 c-7868.0698 8558.8008 -7869.0322 8559.3682 -7869.4312 8560.1738 C-7869.9985 8559.5137 -7871.6968 8557.6406 -7872.6943 8557.6406 C-7872.8462 8557.5469 -7873.0645 8557.375 V-7872.8281 8557.6826 -7872.5835 8557.9629 -7872.3481 8558.1582 C-7871.8638 8560.5449 -7869.5254 8560.4238 V-7869.5449 8560.4785 -7869.5674 8560.5322 -7869.5806 8560.5918 C-7872.9238 8560.582 -7871.9375 8563.207 -7871.2104 8564.5498 C-7873.5918 8565.2656 -7875.2646 8566.5898 -7875.5239 8568.1387 C-7876.4473 8568.1895 -7877.6729 8568.248 -7878.1802 8568.248 C-7878.8726 8568.4209 -7877.8354 8566.3477 V-7877.6626 8563.9287 -7878.8726 8563.7559 V-7881.8096 8562.8906 -7882.5015 8563.583 V-7883.1919 8564.4463 -7884.0562 8563.2354 V-7883.1919 8564.9648 -7881.2915 8564.4463 V-7878.6982 8563.7559 -7879.3906 8565.4834 V-7879.9087 8568.9395 -7878.1802 8569.6289 V-7876.0342 8570.7441 -7874.2822 8570.9785 V-7873.9087 8571.3037 -7873.4639 8571.6006 -7872.9585 8571.8662 C-7875.5562 8571.9365 -7878.2246 8572.8105 -7879.0752 8575.8457 C-7879.5151 8577.1328 -7880.0518 8579.1328 V-7881.1025 8579.7148 -7882.3022 8580.8975 -7883.5415 8583.1514 C-7884.3945 8586.3398 -7885.1675 8581.6025 V-7886.3975 8578.5391 -7887.6504 8578.4277 V-7886.4702 8580.1768 -7886.9038 8581.3057 V-7885.2998 8585.8066 -7883.6138 8584.7891 V-7882.0986 8584.1094 -7880.6885 8581.7041 V-7881.0698 8583.3857 -7881.4326 8585.3066 -7881.6743 8587.2793 C-7882.4888 8587.2871 L-7884.3506 8586.3682 -7884.3262 8589.8486 V-7885.1226 8593.835 -7884.3594 8596.5723 V-7883.6475 8599.04 -7886.1274 8597.8193 V-7887.2842 8598.2139 -7887.9839 8597.6777 V-7890.3882 8596.3018 -7892 8598.0137 V-7890.1475 8597.7695 -7889.4482 8598.3066 V-7887.9785 8598.4512 -7887.8975 8599.0684 V-7884.9561 8599.7441 -7884.1885 8598.9658 V-7882.4175 8598.1025 -7883.1304 8595.25 V-7883.8799 8587.3711 -7882.3198 8589.2949 V-7882.1182 8589.3105 -7881.8784 8589.4072 V-7882.1519 8593.3223 -7881.8018 8597.2139 -7879.9961 8599.7402 C-7883.4536 8592.2227 -7878.2974 8577.1934 Y-7876.9609 8572.4199 -7871.1274 8572.9912 -7868.1455 8573.624 C-7868.0718 8575.0186 -7867.8374 8576.8389 -7867.1318 8577.5449 C-7866.2134 8575.585 -7866.2358 8573.9629 V-7865.0762 8573.6113 -7858.2817 8571.7344 -7855.4487 8575.2266 C-7856.4312 8572.7031 -7858.8262 8571.9082 -7861.2007 8571.8086 C-7860.6675 8571.5215 -7860.2041 8571.1943 -7859.8257 8570.8398 C-7858.0415 8570.6758 -7855.7104 8569.4668 Y-7853.9814 8568.7754 -7854.5015 8565.3193 Y-7855.1919 8563.5918 -7852.5991 8564.2832 Y-7850.7002 8564.8008 -7849.8354 8563.0732 Y-7850.7002 8564.2832 -7851.3906 8563.4199 Yf-7845.9082 8597.8418 m-7846.6074 8598.3789 -7847.7632 8597.9834 Y-7850.2446 8599.2031 -7849.5327 8596.7354 Y-7848.7695 8594 -7849.5645 8590.0117 Y-7849.5415 8586.5342 -7851.4014 8587.4492 Y-7852.0342 8587.4453 L-7852.3198 8585.502 -7852.7046 8583.6445 -7853.0898 8582.0586 C-7851.7129 8584.3096 -7850.2778 8584.9521 Y-7848.5913 8585.9717 -7846.9878 8581.4688 Y-7847.4214 8580.3398 -7846.2417 8578.5918 Y-7847.4937 8578.7021 -7848.7246 8581.7656 Y-7849.4976 8586.5049 -7850.3511 8583.3164 Y-7851.5776 8581.0801 -7852.7695 8579.8994 -7853.8145 8579.3125 C-7854.2026 8577.9521 -7854.4858 8577.1289 Y-7854.7002 8576.3623 -7855.0337 8575.7383 -7855.4487 8575.2266 C-7855.3799 8575.4023 -7855.3174 8575.5879 -7855.2632 8575.7813 C-7849.3022 8593.1484 -7854.4858 8599.8857 V-7861.2246 8609.4766 -7865.3721 8609.4766 V-7868.9663 8609.541 L-7873.1138 8609.541 -7879.8535 8599.9512 Y-7879.9038 8599.8857 -7879.9463 8599.8105 -7879.9961 8599.7402 C-7879.7378 8600.3037 -7879.4375 8600.8301 -7879.0752 8601.2988 C-7872.3359 8610.8896 -7868.1895 8610.8896 V-7864.5942 8610.8242 L-7860.4482 8610.8242 -7853.7095 8601.2344 Y-7851.5801 8598.4668 -7851.3306 8593.9072 -7851.7769 8589.4951 C-7851.6553 8589.4648 -7851.5698 8589.458 Y-7850.0112 8587.5361 -7850.7598 8595.4141 Y-7851.4746 8598.2686 -7849.7026 8599.1289 Y-7848.9351 8599.9082 -7845.9946 8599.2314 Y-7845.9136 8598.6152 -7844.4434 8598.4697 Y-7843.7446 8597.9346 -7841.8921 8598.1777 Y-7843.5024 8596.4668 -7845.9082 8597.8418 YfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 2)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7892 8610.8896 m-7827.1875 8610.8896 L-7827.1875 8546.792 L-7892 8546.792 L-7892 8610.8896 Lnu0 O0 g-7857.6978 8569.3193 m-7859.6094 8546.792 L-7861.5215 8569.3193 L-7860.9033 8569.1953 -7860.2642 8569.1289 -7859.6094 8569.1289 c-7858.9551 8569.1289 -7858.3159 8569.1953 -7857.6978 8569.3193 Cf-7869.2402 8577.2871 m-7892 8579.2197 L-7869.1138 8581.1631 L-7869.2856 8580.4365 -7869.3848 8579.6826 -7869.3848 8578.9053 c-7869.3848 8578.3525 -7869.3281 8577.8145 -7869.2402 8577.2871 Cf-7864.5195 8570.4609 m-7878.1626 8561.6943 L-7868.2153 8574.2666 L-7867.3574 8572.6807 -7866.0718 8571.3662 -7864.5195 8570.4609 Cf-7861.4814 8588.4971 m-7859.5786 8610.8896 L-7857.6768 8588.4863 L-7858.3018 8588.6113 -7858.9473 8588.6807 -7859.6094 8588.6807 c-7860.25 8588.6807 -7860.8735 8588.6143 -7861.4814 8588.4971 Cf-7849.9609 8580.3965 m-7827.1875 8578.4629 L-7850.0835 8576.5186 L-7850.0835 8576.7402 L-7849.9258 8577.4385 -7849.8345 8578.1592 -7849.8345 8578.9053 c-7849.8345 8579.4121 -7849.8848 8579.9082 -7849.9609 8580.3965 Cf-7868.1138 8583.7158 m-7878.1641 8596.4189 L-7864.2778 8587.4951 L-7865.8823 8586.6201 -7867.2114 8585.3057 -7868.1138 8583.7158 Cf-7850.9961 8574.2842 m-7840.8755 8561.4951 L-7854.7666 8570.4209 L-7853.1768 8571.3311 -7851.8633 8572.6689 -7850.9961 8574.2842 Cf-7854.6895 8587.3408 m-7840.8735 8596.2178 L-7850.9658 8583.4629 L-7851.8198 8585.0791 -7853.1152 8586.4209 -7854.6895 8587.3408 Cf-7850.8887 8583.5029 m-7850.3862 8582.5537 -7850.0435 8581.5098 -7849.8755 8580.4092 c-7849.7993 8579.9189 -7849.7485 8579.417 -7849.7485 8578.9053 c-7849.7485 8578.1533 -7849.8398 8577.4248 -7849.9985 8576.7207 c-7850.1958 8575.8457 -7850.5049 8575.0137 -7850.9185 8574.2441 c-7851.7954 8572.6143 -7853.1191 8571.2637 -7854.7241 8570.3457 c-7855.6294 8569.8271 -7856.6226 8569.4434 -7857.6802 8569.2354 c-7858.3047 8569.1104 -7858.9497 8569.042 -7859.6094 8569.042 c-7860.2695 8569.042 -7860.9155 8569.1104 -7861.5391 8569.2354 c-7862.6235 8569.4502 -7863.6382 8569.8457 -7864.5625 8570.3857 c-7866.1313 8571.2998 -7867.4282 8572.626 -7868.2915 8574.2246 c-7868.7969 8575.1592 -7869.1455 8576.1865 -7869.3262 8577.2725 c-7869.4155 8577.8057 -7869.4727 8578.3486 -7869.4727 8578.9053 c-7869.4727 8579.6904 -7869.3711 8580.4502 -7869.1978 8581.1826 c-7868.9814 8582.0967 -7868.6406 8582.9629 -7868.1875 8583.7598 c-7867.2793 8585.3623 -7865.9395 8586.6904 -7864.3174 8587.5723 c-7863.4487 8588.0449 -7862.5 8588.3877 -7861.4961 8588.583 c-7860.8848 8588.7002 -7860.2554 8588.7676 -7859.6094 8588.7676 c-7858.9414 8588.7676 -7858.29 8588.6982 -7857.6602 8588.5723 c-7856.5786 8588.3564 -7855.5664 8587.9551 -7854.6455 8587.417 c-7853.0566 8586.4873 -7851.7515 8585.1338 -7850.8887 8583.5029 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 3)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7882.75 8611.8896 m-7882.75 8587.8896 L-7892.75 8587.8896 L-7892.75 8611.8896 L-7882.75 8611.8896 Lnuu0 Ap0 O1 g-7883.4058 8603.4258 m-7882.9878 8602.3242 -7882.75 8601.1367 -7882.75 8599.8896 c-7882.75 8598.0273 -7883.2681 8596.29 -7884.1543 8594.7969 c-7885.8975 8591.8633 -7889.0898 8589.8896 -7892.75 8589.8896 C-7892.75 8609.8896 L-7892.4297 8609.8896 -7892.1143 8609.8711 -7891.8018 8609.8418 c-7889.9121 8609.665 -7888.1807 8608.9541 -7886.7441 8607.8721 c-7885.2471 8606.7441 -7884.0801 8605.208 -7883.4058 8603.4258 cf0 R0 G1 J 1 j 0.5 w-7892.75 8590.207 m-7889.7207 8591.1641 -7886.8926 8592.8223 -7884.1543 8594.7969 CS-7892.75 8595.8408 m-7889.5991 8598.2461 -7886.5435 8600.9766 -7883.4058 8603.4258 CS-7886.7441 8607.8721 m-7888.8105 8606.7813 -7890.7993 8605.4238 -7892.75 8603.9326 CS-7891.8018 8609.8418 m-7892.1191 8609.7578 -7892.4375 8609.6748 -7892.75 8609.5762 CS-7886.7441 8607.8721 m-7888.1807 8608.9541 -7889.9121 8609.6641 -7891.8018 8609.8418 CS-7883.4058 8603.4258 m-7882.9878 8602.3242 -7882.75 8601.1367 -7882.75 8599.8896 c-7882.75 8598.0273 -7883.2681 8596.29 -7884.1543 8594.7969 CS-7892.75 8609.8896 m-7892.4297 8609.8896 -7892.1143 8609.8711 -7891.8018 8609.8418 CS-7886.7441 8607.8721 m-7885.2471 8606.7441 -7884.0801 8605.208 -7883.4058 8603.4258 CS-7884.1543 8594.7969 m-7885.8975 8591.8633 -7889.0898 8589.8896 -7892.75 8589.8896 CSUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 34)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7892.0254 8610.916 m-7836.0542 8610.916 L-7836.0542 8549.4238 L-7892.0254 8549.4238 L-7892.0254 8610.916 Lnuu0 O0.0745 0.9 0.9019 0.18 k0 R0 0 0 1 K1 J 1 j 0.0518 w-7865.5991 8587.6113 m-7865.3594 8598.4111 -7870.8794 8608.7295 v-7870.4009 8610.8896 -7868.9595 8610.8896 v-7869.2002 8607.5303 -7868.2393 8607.0508 v-7863.9199 8595.0498 -7864.6382 8587.1289 v-7865.5991 8587.6113 lb-7865.5991 8587.6113 m-7867.2793 8592.8896 -7879.0391 8594.0908 v-7883.3594 8594.5703 -7883.5991 8596.0098 v-7877.1206 8586.4092 -7876.1602 8586.6504 v-7889.3594 8580.8906 -7892 8575.6094 v-7886.9595 8578.4902 -7883.5991 8576.3301 v-7875.6802 8576.0908 -7870.6406 8578.251 v-7866.8008 8580.1709 -7874.7202 8564.0908 v-7870.8794 8575.8506 -7867.2793 8549.4502 v-7866.3198 8554.7305 -7864.8799 8556.1709 v-7858.8799 8563.8506 -7859.8398 8566.0098 v-7860.3198 8569.8506 -7855.7598 8563.6104 v-7856 8573.2109 -7858.4009 8576.5703 v-7860.5591 8580.1709 -7854.5591 8578.0098 v-7848.5591 8576.0908 -7843.2793 8577.7705 v-7837.7598 8579.21 -7836.0801 8576.3301 v-7847.8398 8588.8105 -7853.5991 8588.5703 v-7851.9194 8592.1709 l-7849.5195 8596.9697 -7850 8598.1709 v-7865.2681 8588.7725 -7865.5991 8587.6113 vb-7865.5991 8587.6113 m-7862.9595 8569.1289 -7865.5991 8561.4502 v-7867.9985 8550.8906 -7867.2793 8549.4502 vS-7864.1602 8576.3301 m-7858.1602 8571.5303 -7856.9595 8566.25 vS-7864.1602 8575.6094 m-7873.0391 8567.9307 -7874.7202 8564.0908 vS-7836.0801 8576.3301 m-7837.2793 8578.4902 -7865.3594 8586.6504 y-7870.4009 8581.1318 -7881.9199 8578.7305 v-7889.5986 8577.7705 -7892 8575.6094 vS-7882.6382 8594.5703 m-7871.1191 8585.4512 -7865.3594 8586.6504 y-7851.1992 8592.8896 -7850 8598.1709 vSUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 36)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7891.8496 8610.8857 m-7841.96 8610.8857 L-7841.96 8559.8154 L-7891.8496 8559.8154 L-7891.8496 8610.8857 Lnu0 O0.025 0.1 0.475 0 k-7870.1504 8578.793 m-7872.4766 8577.7021 -7874.6914 8577.333 -7876.3735 8577.8135 c-7877.0518 8578.0059 -7877.6455 8578.3369 -7878.1235 8578.8135 c-7878.6006 8579.292 -7878.9297 8579.8848 -7879.1235 8580.5625 c-7880.0088 8583.6602 -7878.0103 8588.5674 -7873.9233 8592.6563 c-7869.8345 8596.7432 -7864.9297 8598.7402 -7861.8286 8597.8555 c-7861.1519 8597.6602 -7860.5586 8597.332 -7860.0806 8596.8555 c-7859.6035 8596.377 -7859.2754 8595.7852 -7859.0825 8595.1064 c-7858.5176 8593.1357 -7859.1226 8590.4346 -7860.6855 8587.6777 c-7861.5825 8586.0986 -7862.7915 8584.5029 -7864.2793 8583.0127 c-7866.1504 8581.1436 -7868.1914 8579.7139 -7870.1504 8578.793 cfu0.0035 0.014 0.0665 0 k-7869.2183 8577.8623 m-7871.8306 8576.9111 -7874.3975 8576.8584 -7876.3735 8577.8135 C-7874.6914 8577.333 -7872.4766 8577.7021 -7870.1504 8578.793 c-7869.6191 8579.0439 -7869.0806 8579.333 -7868.5435 8579.6572 C-7866.8984 8578.9434 L-7867.6675 8578.5068 -7868.4434 8578.1436 -7869.2183 8577.8623 cf0.015 0.06 0.285 0 k-7866.8984 8578.9434 m-7868.5435 8579.6572 L-7867.0962 8580.5244 -7865.6426 8581.6504 -7864.2793 8583.0127 c-7864.1538 8583.1387 -7864.0327 8583.2666 -7863.9102 8583.3945 C-7863.2153 8581.7529 L-7864.3706 8580.6133 -7865.6191 8579.6709 -7866.8984 8578.9434 CfUu0.039 0.156 0.741 0 k-7857.6875 8566.293 m-7857.9746 8566.5811 -7869.2183 8577.8623 Y-7868.4434 8578.1436 -7867.6675 8578.5068 -7866.8984 8578.9434 C-7853.4146 8565.46 L-7855.0615 8564.9893 -7856.6406 8565.2441 -7857.6875 8566.293 cf0.025 0.1 0.475 0 k-7853.4146 8565.46 m-7866.8984 8578.9434 L-7865.5845 8579.6924 -7864.2969 8580.665 -7863.1143 8581.8457 c-7863.0845 8581.876 -7863.0586 8581.9053 -7863.0278 8581.9346 C-7849.3408 8568.2471 L-7849.5264 8568.0225 -7849.7202 8567.8037 -7849.9302 8567.5898 c-7851.0103 8566.5127 -7852.2305 8565.7979 -7853.4146 8565.46 CfUu0.0115 0.046 0.2185 0 k-7843.9346 8575.2822 m-7841.5337 8572.8789 -7841.3354 8568.9785 -7843.1382 8565.5869 C-7844.2954 8566.0078 L-7842.0938 8569.3857 -7841.8398 8573.1846 -7843.9346 8575.2822 cf0.015 0.06 0.285 0 k-7851.5337 8560.4854 m-7850.5825 8559.8154 L-7853.2046 8559.2412 -7855.8306 8559.8037 -7857.6206 8561.5957 c-7856.1719 8560.1475 -7853.9082 8559.8193 -7851.5337 8560.4854 Cf0.0295 0.118 0.5605 0 k-7851.5337 8560.4854 m-7853.9082 8559.8193 -7856.1719 8560.1475 -7857.6206 8561.5957 c-7859.0195 8562.9951 -7859.3706 8565.1533 -7858.7954 8567.4365 C-7856.8672 8564.4346 -7853.4082 8565.4434 V-7851.5854 8560.5205 L-7851.5337 8560.4854 Lf*u1 D0.048 0.192 0.912 0 k-7843.9346 8575.2822 m-7845.2817 8576.6279 -7847.3325 8577.0029 -7849.5234 8576.5166 C-7859.6714 8586.6631 L-7859.7695 8586.458 -7859.7695 8586.458 -7859.6714 8586.6631 c-7858.2246 8589.7041 -7857.9702 8592.8057 -7859.0825 8595.1064 C-7858.5176 8593.1357 -7859.1226 8590.4346 -7860.6855 8587.6777 c-7861.5054 8586.2334 -7862.5918 8584.7744 -7863.9102 8583.3945 C-7863.2153 8581.7529 L-7863.1816 8581.7842 -7863.1465 8581.8135 -7863.1143 8581.8457 c-7863.0845 8581.877 -7863.0566 8581.9072 -7863.0273 8581.9365 c-7863.0278 8581.9365 -7863.0278 8581.9365 -7863.0278 8581.9346 C-7849.3408 8568.2471 L-7844.3262 8566.0186 L-7844.2954 8566.0078 L-7842.0938 8569.3857 -7841.8398 8573.1846 -7843.9346 8575.2822 cf*U0 D0.0215 0.086 0.4085 0 k-7850.5825 8559.8154 m-7851.5337 8560.4854 L-7849.6846 8561.001 -7847.7656 8562.1182 -7846.1138 8563.7725 c-7845.4063 8564.4785 -7844.7998 8565.2314 -7844.2954 8566.0078 C-7843.1382 8565.5869 L-7843.6553 8564.6143 -7844.3374 8563.6826 -7845.1802 8562.8408 c-7846.7695 8561.249 -7848.6758 8560.2314 -7850.5825 8559.8154 Cf0.0205 0.082 0.3895 0 k-7844.2954 8566.0078 m-7844.7998 8565.2314 -7845.4063 8564.4785 -7846.1138 8563.7725 c-7847.7656 8562.1182 -7849.6846 8561.001 -7851.5337 8560.4854 C-7851.5854 8560.5205 L-7853.4082 8565.4434 L-7852.2114 8565.8105 -7850.9878 8566.5322 -7849.9302 8567.5898 c-7849.7202 8567.8037 -7849.5264 8568.0225 -7849.3408 8568.2471 C-7844.3262 8566.0186 L-7844.2954 8566.0078 LfUu0.445 0.356 0.267 0 k-7891.8496 8610.8857 m-7869.9575 8587.8584 L-7870.2007 8587.5391 -7870.5752 8587.5029 -7870.8887 8587.5488 C-7875.1802 8592.1777 -7886.3145 8604.3457 -7890.7266 8609.1689 C-7891.5649 8610.2412 -7892 8610.8828 -7891.8496 8610.8857 Cf0.15 0.12 0.09 0 k-7891.8345 8610.8857 m-7890.6606 8610.5928 -7869.6934 8588.8926 Y-7869.6934 8588.3916 -7869.7993 8588.0654 -7869.9575 8587.8584 C-7891.8496 8610.8857 L-7891.8442 8610.8857 -7891.8418 8610.8896 -7891.8345 8610.8857 cf0.2 0.16 0.12 0 k-7890.7266 8609.1689 m-7886.3145 8604.3457 -7875.1802 8592.1777 -7870.8887 8587.5488 C-7871.2002 8587.5938 -7871.4526 8587.7197 Y-7872.6035 8588.0225 -7886.5742 8603.8506 -7890.7266 8609.1689 CfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 37)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7890.9502 8610.1221 m-7841.0391 8610.1221 L-7841.0391 8546.0049 L-7890.9502 8546.0049 L-7890.9502 8610.1221 Lnu0 O0 0 0 1 k0 R0 0 0 1 K0 w-7841.2358 8546.0049 m-7841.6064 8546.1377 -7841.9858 8546.1729 -7842.3833 8546.0928 c-7842.4863 8546.0576 l-7842.5254 8546.0498 -7842.5703 8546.0684 -7842.6025 8546.0889 c-7842.9434 8546.2822 l-7846.7129 8548.1855 -7850.0962 8550.7861 -7852.5 8554.3369 c-7853.9634 8556.4814 -7855.1235 8558.7686 -7856.7993 8560.7461 c-7857.1729 8561.0986 -7857.1758 8561.6621 -7856.8345 8562.0205 c-7856.4951 8562.3906 -7855.9185 8562.3975 -7855.5615 8562.0537 c-7855.4038 8562.0986 l-7855.2642 8562.0186 -7855.0742 8561.96 -7855.0234 8561.8457 c-7853.8535 8559.0928 -7853.1895 8556.4033 -7851.4336 8554.0273 c-7849.1719 8550.9834 -7846.1777 8548.8838 -7843.0298 8546.9121 c-7842.3672 8546.4951 L-7842.4966 8546.5244 L-7841.7695 8546.5322 l-7841.7915 8546.501 -7841.8008 8546.4854 -7841.8223 8546.4541 C-7841.6064 8546.4121 -7841.3774 8546.3643 -7841.1626 8546.3232 c-7841.0762 8546.3135 -7841.0186 8546.2285 -7841.0391 8546.1279 c-7841.0503 8546.042 -7841.1382 8545.998 -7841.2358 8546.0049 c-7841.2358 8546.0049 lb-7857.2222 8559.8848 m-7857.5742 8559.6953 -7857.9658 8559.5615 -7858.2485 8559.2783 c-7864.4521 8553.0615 -7874.6802 8552.1631 -7882.0488 8558.5752 C-7882.1582 8558.6709 -7882.1582 8558.8457 -7882.0635 8558.9541 C-7879.0527 8557.833 -7870.8838 8559.2646 -7867.3223 8562.3018 C-7867.2534 8562.3564 -7867.1465 8562.3418 -7867.1055 8562.2607 C-7867.0503 8562.1943 -7867.0664 8562.085 -7867.1328 8562.0449 C-7870.5625 8558.9756 -7875.0674 8557.1797 -7879.6729 8557.6377 C-7876.8535 8556.0752 -7873.6313 8555.3838 -7870.3984 8555.5781 c-7865.7144 8555.8613 -7861.4634 8558.0088 -7857.3711 8560.1689 c-7857.2915 8560.209 -7857.1978 8560.1826 -7857.1553 8560.1006 C-7857.1016 8560.0205 -7857.1426 8559.9248 -7857.2222 8559.8848 cb-7866.6475 8561.2256 m-7868.2266 8565.251 -7870.3911 8569.21 -7873.8018 8571.9658 c-7873.9648 8572.1016 -7873.9946 8572.3389 -7873.8711 8572.4951 c-7873.7344 8572.6572 -7873.5049 8572.6689 -7873.3481 8572.5449 c-7869.1235 8570.4863 -7866.1904 8566.0205 -7866.1626 8561.291 c-7866.1626 8561.291 l-7866.1328 8561.1563 -7866.2354 8561.0234 -7866.3633 8561.0117 c-7866.5039 8560.9951 -7866.6318 8561.0869 -7866.6475 8561.2256 c-7866.6475 8561.2256 lb-7860.9414 8565.9072 m-7861.0425 8566.0713 -7861.1152 8566.2734 -7861.2617 8566.3721 c-7864.0806 8568.2793 -7866.9785 8569.5205 -7869.8848 8571.0225 c-7870.0503 8571.0986 -7870.1118 8571.3066 -7870.0313 8571.46 c-7869.9512 8571.6113 -7869.7559 8571.6689 -7869.5898 8571.5938 c-7866.4395 8570.2129 -7862.3135 8569.3896 -7860.6729 8566.0693 c-7860.6289 8566.001 -7860.6455 8565.9033 -7860.7266 8565.8545 c-7860.7959 8565.8096 -7860.8975 8565.8389 -7860.9414 8565.9072 c-7860.9414 8565.9072 lb-7860.6602 8566.8076 m-7860.4438 8567.3193 -7860.1431 8567.7793 -7860.0503 8568.3242 c-7859.2183 8573.167 -7859.1152 8577.9307 -7860.2485 8582.5762 c-7860.2485 8582.5762 l-7860.3418 8582.8428 -7860.2114 8583.1338 -7859.9438 8583.2285 c-7859.6777 8583.3232 -7859.3882 8583.2021 -7859.2935 8582.9375 c-7857.2935 8577.7002 -7857.8975 8571.627 -7860.3711 8566.6729 c-7860.4063 8566.5898 -7860.4985 8566.5586 -7860.5825 8566.5811 c-7860.6641 8566.6172 -7860.6978 8566.7246 -7860.6602 8566.8076 c-7860.6602 8566.8076 lb-7859.5352 8582.4834 m-7856.8984 8580.1162 -7854.6816 8577.1416 -7853.8535 8573.626 c-7853.8535 8573.626 l-7853.7246 8573.0713 -7854.0742 8572.5127 -7854.6416 8572.3799 c-7855.1992 8572.2646 -7855.7578 8572.6143 -7855.8862 8573.1689 c-7856.5649 8576.4209 -7857.8711 8579.5625 -7859.7954 8582.2764 c-7859.7954 8582.2764 l-7859.8462 8582.3447 -7859.8345 8582.4473 -7859.7695 8582.5098 c-7859.6992 8582.5596 -7859.5977 8582.5479 -7859.5352 8582.4834 c-7859.5352 8582.4834 lb-7844.3711 8575.0723 m-7845.7114 8570.7197 -7848.2598 8566.959 -7851.6895 8564.043 C-7851.7295 8563.9609 -7851.8242 8563.9209 -7851.9038 8563.9756 C-7851.9863 8564.0166 -7852.0122 8564.1104 -7851.9722 8564.1914 C-7851.9575 8564.6777 -7851.7144 8565.123 -7851.4458 8565.4209 c-7846.4063 8571.0518 -7842.9902 8579.6094 -7845.3433 8586.8447 C-7845.0762 8581.3408 -7846.7241 8575.1904 -7850.1362 8570.5625 c-7851.1606 8569.1592 -7852.7422 8569.0098 -7854.3081 8569.0928 C-7854.4023 8569.0791 -7854.4834 8569.1328 -7854.4961 8569.2266 c-7854.5098 8569.3086 -7854.4551 8569.4033 -7854.3623 8569.415 C-7851.1479 8570.6592 -7849.4878 8574.1143 -7848.0845 8577.084 c-7846.4155 8580.6338 -7845.7017 8584.5273 -7846.0054 8588.3896 C-7846.0454 8588.5674 -7846.1138 8590.2871 -7845.9775 8590.2998 C-7845.8306 8590.3281 -7845.7095 8590.2334 -7845.6802 8590.084 C-7845.6455 8589.9346 -7842.6426 8580.6885 -7844.3711 8575.0723 cb-7852.4863 8562.3809 m-7851.3945 8558.5098 -7849.1094 8555.1406 -7846.4824 8552.1279 c-7846.3306 8551.9941 -7846.3145 8551.7754 -7846.4502 8551.625 c-7846.5752 8551.4902 -7846.8047 8551.4717 -7846.9575 8551.6074 c-7850.3306 8554.2217 -7851.4487 8558.4307 -7852.7954 8562.2646 c-7852.7954 8562.2646 l-7852.8262 8562.3545 -7852.7754 8562.4482 -7852.6982 8562.4766 c-7852.6094 8562.5088 -7852.5166 8562.458 -7852.4863 8562.3809 c-7852.4863 8562.3809 lb-7846.5313 8586.999 m-7846.5991 8586.9463 -7846.7075 8586.9727 -7846.7485 8587.04 C-7846.9634 8587.3643 -7848.6914 8589.4092 -7849.3926 8590.0303 c-7854.1719 8594.2842 -7857.5137 8598.8506 -7865.5391 8602.6113 c-7872.4512 8605.8535 -7875.1113 8608.4854 -7882.3862 8606.7158 c-7885.6875 8605.9189 -7887.0313 8605.4209 -7888.4351 8600.3447 C-7889.9473 8594.1885 -7888.8672 8596.6729 -7889.0845 8589.3281 c-7889.2222 8584.5869 -7892 8573.3447 -7879.5254 8559.1494 C-7879.4199 8559.0381 -7879.4336 8558.8857 -7879.5337 8558.7969 C-7879.6328 8558.6924 -7879.7959 8558.7061 -7879.8862 8558.8057 C-7885.5786 8563.6064 -7889.0234 8570.5479 -7890.3145 8577.832 c-7891.2871 8583.3564 -7890.9199 8588.1387 -7890.6665 8594.5264 c-7890.5688 8596.9834 -7891.6855 8603.9609 -7886.9102 8607.9521 c-7883.3926 8610.8896 -7878.3911 8610.4365 -7874.3545 8609.0449 c-7868.6992 8607.1016 -7863.9727 8604.0361 -7858.8711 8600.499 c-7855.2656 8598.0146 -7847.2881 8588.1738 -7846.4785 8587.2158 C-7846.4351 8587.1484 -7846.4502 8587.04 -7846.5313 8586.999 Cb-7881.0503 8574.1953 m-7880.1685 8573.3926 -7879.7017 8574.7354 -7879.4297 8575.4912 c-7879.1626 8576.2471 -7878.1895 8576.1387 -7878.5127 8576.4629 c-7878.8369 8576.7871 -7878.8369 8576.8418 -7879.3232 8576.4092 c-7879.8086 8575.9775 -7879.8086 8576.626 -7880.5649 8576.1387 c-7881.3198 8575.6514 -7881.6455 8574.7354 -7881.0503 8574.1953 cb-7873.6519 8578.8389 m-7873.3657 8578.4814 -7872.6802 8578.4609 -7872.4648 8578.7842 c-7872.25 8579.1094 -7871.3306 8579.1631 -7871.4937 8579.4863 c-7871.6543 8579.8105 -7871.6016 8580.0273 -7872.0874 8579.8105 c-7872.5737 8579.5938 -7872.4121 8580.1895 -7872.8975 8579.9736 c-7873.3833 8579.7568 -7873.8687 8579.1094 -7873.6519 8578.8389 cb-7865.6074 8583.9688 m-7865.1206 8583.6455 -7863.8794 8584.4014 -7864.4727 8584.4014 c-7865.0674 8584.4014 -7864.3115 8585.1563 -7864.8521 8585.373 c-7865.3906 8585.5889 -7865.2832 8585.3193 -7865.6074 8585.5342 c-7865.9297 8585.751 -7866.3633 8586.1289 -7866.5239 8585.3193 c-7866.6855 8584.5088 -7866.3633 8584.5088 -7865.9849 8584.2393 c-7865.6074 8583.9688 -7865.6074 8583.9688 yb-7880.2402 8584.2393 m-7879.1074 8584.1318 -7879.8633 8584.8877 -7879.2695 8585.373 c-7878.6738 8585.8594 -7877.9185 8586.5068 -7878.7295 8586.29 c-7879.5391 8586.0752 -7880.9961 8586.5615 -7880.9434 8585.4277 c-7880.8887 8584.293 -7880.6328 8584.2764 -7880.2402 8584.2393 cb-7874.5703 8592.501 m-7874.1016 8592.2334 -7874.6802 8592.6094 -7874.0303 8592.501 c-7873.3833 8592.3936 -7872.7886 8592.501 -7873.2207 8592.7178 c-7873.6519 8592.9336 -7874.3008 8593.042 -7874.4634 8592.8789 c-7874.6255 8592.7178 -7874.9473 8592.7178 -7874.5703 8592.501 cb-7865.0674 8592.0693 m-7865.4785 8591.0693 -7864.0962 8591.3135 -7863.4473 8591.6357 c-7862.7998 8591.9609 -7861.8262 8591.3672 -7862.4209 8591.7998 c-7863.0137 8592.2314 -7862.7998 8591.7998 -7863.3926 8592.123 c-7863.9873 8592.4463 -7864.6895 8592.9873 -7865.0674 8592.0693 cb-7880.6738 8597.9561 m-7880.7222 8596.9648 -7879.8086 8597.8457 -7879.2695 8597.9014 c-7878.7295 8597.9561 -7878.0801 8597.9561 -7878.2432 8598.1709 c-7878.4038 8598.3877 -7878.4595 8598.3877 -7879.1626 8598.6025 c-7879.8633 8598.8193 -7880.6191 8599.0342 -7880.6738 8597.9561 cb-7881.1582 8592.501 m-7882.0664 8592.8643 -7882.2935 8592.7705 -7882.5625 8593.0938 c-7882.8345 8593.4189 -7883.1558 8594.1201 -7883.5352 8592.9873 c-7883.9121 8591.8525 -7883.4282 8590.666 -7883.0479 8590.8271 c-7882.6714 8590.9893 -7882.2935 8591.6357 -7881.8618 8591.8525 c-7881.4297 8592.0693 -7880.6191 8592.2842 -7881.1582 8592.501 cbUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 41)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7892 8610.8896 m-7811 8610.8896 L-7811 8505.8896 L-7892 8505.8896 L-7892 8610.8896 Lnuuu0 O0 0 0 1 k-7873.8057 8523.3154 m-7874.0742 8521.5518 -7875.1602 8520.1807 -7876.5239 8520.2861 c-7877.8862 8520.3916 -7878.7075 8521.9121 -7878.7432 8523.6953 c-7878.7485 8523.959 -7878.6743 8525.1338 -7878.6304 8525.3672 C-7878.6382 8525.4717 -7878.6191 8525.5625 -7878.6104 8525.6689 c-7878.5142 8526.915 -7877.3574 8528.25 -7875.9414 8528.1387 c-7874.5249 8528.0303 -7873.4897 8526.751 -7873.6367 8525.3623 c-7873.6445 8525.2969 -7873.6958 8524.5146 -7873.7075 8524.4521 C-7873.6816 8524.1738 -7873.7598 8523.6152 -7873.8057 8523.3154 cf-7884.2646 8532.623 m-7884.9946 8540.8057 -7879.5015 8540.0088 v-7876.3682 8538.9082 -7877.4414 8536.0098 v-7877.6426 8534.6416 -7879.7847 8533.3877 v-7880.1465 8533.1387 -7880.7632 8531.9912 v-7881.1294 8530.4873 -7882.5186 8530.1865 v-7884.0762 8530.1406 -7884.2646 8532.623 vf-7858.7646 8541.3857 mF-7858.0762 8539.2305 m-7858.7847 8538.083 -7861.8848 8538.5176 Y-7862.8115 8538.5781 -7863.3799 8538.001 Y-7865.8394 8533.9814 -7869.0386 8534.7754 -7869.4082 8534.8828 C-7869.4097 8534.876 L-7872.9995 8535.4941 -7873.2666 8540.4922 V-7873.4912 8541.2725 -7874.3354 8541.6592 V-7877.2695 8542.751 -7877.3481 8544.0977 V-7877.8999 8546.0049 -7875.6006 8546.6318 V-7873.6792 8547.1465 -7871.7886 8544.7842 V-7870.6113 8543.5693 -7867.5762 8542.8281 V-7867.5728 8542.8428 L-7864.3594 8541.9346 -7862.6392 8542.4785 Y-7859.8521 8543.6572 -7858.4063 8542.291 Y-7856.6826 8540.6455 -7858.0762 8539.2305 Yf-7871.9834 8522.7686 m-7872.5854 8521.0898 -7872.2822 8519.3672 -7871.0327 8518.8125 c-7869.7842 8518.2568 -7868.3384 8519.2061 -7867.4585 8520.7568 c-7867.3286 8520.9854 -7866.8359 8522.0537 -7866.7632 8522.2793 C-7866.7065 8522.3682 -7866.6792 8522.458 -7866.6362 8522.5566 c-7866.1289 8523.6982 -7866.5122 8525.4199 -7867.8105 8525.9971 c-7869.1089 8526.5752 -7870.6279 8525.9424 -7871.1582 8524.6514 c-7871.1831 8524.5898 -7871.5078 8523.877 -7871.5298 8523.8154 C-7871.6831 8523.585 -7871.8809 8523.0557 -7871.9834 8522.7686 cf-7857.7129 8525.8213 m-7853.1802 8532.6719 -7858.3911 8534.584 v-7861.6714 8535.1064 -7862.1035 8532.0469 v-7862.5786 8530.7461 -7861.29 8528.625 v-7861.0903 8528.2344 -7861.0938 8526.9297 v-7861.4858 8525.4346 -7860.4082 8524.5078 v-7859.0591 8523.7256 -7857.7129 8525.8213 vfUu-7832.7358 8574.9971 m-7832.3687 8573.252 -7832.9048 8571.585 -7834.2183 8571.2061 c-7835.5322 8570.8271 -7836.8345 8571.9648 -7837.4937 8573.6221 c-7837.5903 8573.8672 -7837.9326 8574.9922 -7837.9746 8575.2266 C-7838.0176 8575.3223 -7838.0322 8575.4141 -7838.0625 8575.5176 c-7838.4087 8576.7168 -7837.7935 8578.3701 -7836.4282 8578.7646 c-7835.0635 8579.1592 -7833.6455 8578.3262 -7833.2969 8576.9746 c-7833.2793 8576.9102 -7833.0552 8576.1602 -7833.0425 8576.0967 C-7832.9214 8575.8447 -7832.7983 8575.2949 -7832.7358 8574.9971 cf-7846.2705 8579.5068 m-7849.8242 8586.9141 -7844.3999 8588.0957 v-7841.0801 8588.165 -7841.0688 8585.0742 v-7840.7778 8583.7207 -7842.3433 8581.7969 v-7842.5942 8581.4346 -7842.7695 8580.1436 v-7842.5854 8578.6074 -7843.7793 8577.8389 v-7845.2222 8577.249 -7846.2705 8579.5068 vf-7825.4648 8596.6592 mF-7824.0635 8594.8809 m-7824.3247 8593.5586 -7827.3799 8592.877 Y-7828.27 8592.6094 -7828.5986 8591.8682 Y-7829.4922 8587.2432 -7832.7666 8586.8643 -7833.1494 8586.835 C-7833.1494 8586.8281 L-7836.7271 8586.1484 -7838.7314 8590.7354 V-7839.2153 8591.3857 -7840.1416 8591.4521 V-7843.2725 8591.4453 -7843.8169 8592.6777 V-7845.0039 8594.2705 -7843.0713 8595.666 V-7841.4526 8596.8213 -7838.8535 8595.2705 V-7837.3242 8594.5479 -7834.2222 8594.9189 V-7834.2231 8594.9307 L-7830.8965 8595.2109 -7829.4766 8596.3223 Y-7827.2793 8598.4033 -7825.4463 8597.6328 Y-7823.2554 8596.6953 -7824.0635 8594.8809 Yf-7830.8374 8575.125 m-7830.8135 8573.3408 -7829.9258 8571.835 -7828.5601 8571.7529 c-7827.1943 8571.6689 -7826.1743 8573.0664 -7825.8955 8574.8281 c-7825.8545 8575.0869 -7825.7666 8576.2607 -7825.7778 8576.499 C-7825.7559 8576.6006 -7825.7617 8576.6934 -7825.7559 8576.8018 c-7825.6807 8578.0488 -7826.6445 8579.5264 -7828.0625 8579.6113 c-7829.4814 8579.6953 -7830.6826 8578.5723 -7830.7246 8577.1768 c-7830.7271 8577.1113 -7830.7822 8576.3301 -7830.7798 8576.2646 C-7830.8433 8575.9941 -7830.8423 8575.4297 -7830.8374 8575.125 cf-7819.0186 8582.4521 m-7817.1777 8590.458 -7822.7271 8590.4199 v-7825.9834 8589.7578 -7825.3154 8586.7402 v-7825.3032 8585.3564 -7823.3535 8583.8223 v-7823.0278 8583.5273 -7822.5742 8582.3047 v-7822.4175 8580.7656 -7821.0835 8580.2773 v-7819.5454 8580.0176 -7819.0186 8582.4521 vfUU1 Ap-7892 8610.8896 m-7892 8505.8896 L-7811 8505.8896 L-7811 8610.8896 L-7892 8610.8896 LnUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 42)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-7865.4609 8583.9746 m-7893 8583.9746 L-7893 8611.5137 L-7865.4609 8611.5137 L-7865.4609 8583.9746 Ln0 O0 0.55 1 0.12 k-7879.7598 8602.252 m-7879.7598 8611.8896 L-7878.6343 8611.8896 L-7878.6343 8602.252 L-7879.7598 8602.252 Lf0 0.55 1 0.3 k-7883.4233 8597.7656 m-7882.3096 8596.0449 -7878.8809 8594.3457 -7874.4966 8594.3457 c-7870.1152 8594.3457 -7866.6138 8595.9961 -7865.5718 8597.7637 C-7865.5718 8597.7637 L-7866.6138 8599.4902 -7870.1152 8601.1865 -7874.4966 8601.1865 c-7878.8755 8601.1865 -7882.3242 8599.4512 -7883.4233 8597.7656 CfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 45)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7893 8568.8076 m-7893 8611.8896 L-7806.2217 8611.8896 L-7806.2217 8568.8076 L-7893 8568.8076 Lnuu0 O0 0 0 1 k-7833.2217 8598.126 m-7833.2217 8605.9639 L-7821.2217 8599.0342 L-7809.2217 8592.1064 L-7821.2217 8585.1777 L-7833.2217 8578.251 L-7833.2217 8586.3721 L-7891.9351 8572.6064 L-7878.9878 8591.6924 L-7893 8611.8896 L-7833.2217 8598.126 Lf0 1 1 0.1 k0 R0 0 0 1 K-7831.2217 8595.126 m-7831.2217 8602.9639 L-7819.2217 8596.0342 L-7807.2217 8589.1064 L-7819.2217 8582.1777 L-7831.2217 8575.251 L-7831.2217 8583.3721 L-7889.9351 8569.6064 L-7875.2754 8589.249 L-7889.9351 8608.8896 L-7831.2217 8595.126 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 5)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7734.3994 8611.8896 m-7734.3994 8598.3096 L-7893 8598.3096 L-7893 8611.8896 L-7734.3994 8611.8896 Lnuu0 O0.285 0.228 0.171 0 k-7749.0786 8610.374 m-7749.0435 8611.5791 L-7735.5103 8612.4072 -7734.8418 8611.1719 v-7734.7441 8610.9912 -7734.6475 8610.6045 -7734.5615 8610.083 C-7736.5845 8610.7139 -7746.2915 8610.4609 -7749.0786 8610.374 Cf0.44 0.352 0.264 0 k-7749.4063 8598.9121 m-7749.3711 8600.1563 L-7746.4912 8599.9385 -7736.1914 8599.2061 -7734.5435 8599.7549 C-7734.7031 8599.1084 -7734.9199 8598.6543 -7735.2046 8598.5049 c-7736.8306 8597.6553 -7749.4063 8598.9121 Yf0.145 0.116 0.087 0 k-7749.3711 8600.1563 m-7749.0786 8610.374 L-7746.2915 8610.4609 -7736.5845 8610.7139 -7734.5615 8610.083 C-7734.1519 8607.667 -7733.9258 8602.25 -7734.5435 8599.7549 C-7736.1914 8599.2061 -7746.4912 8599.9385 -7749.3711 8600.1563 CfUu0.155 0.124 0.093 0 k-7774.9375 8604.1631 m-7773.8975 8604.5449 L-7755.0728 8600.0361 L-7755.4814 8599.2041 L-7774.3633 8601.6143 L-7775.2524 8601.8945 L-7775.6504 8601.7832 -7776.1934 8601.7139 V-7775.6094 8602.127 -7775.1426 8603.0303 -7774.9375 8604.1631 Cfu0.085 0.068 0.051 0 k-7779.7993 8608.5557 m-7780.5977 8608.6113 -7777.7495 8608.5537 Y-7778.3481 8607.9072 -7778.7715 8606.71 -7778.8105 8605.3271 c-7778.8169 8605.1143 -7778.8105 8604.9072 -7778.7993 8604.7031 C-7779.0415 8604.5967 -7779.0918 8604.6631 -7779.6289 8604.4541 C-7779 8608.501 -7779.7993 8608.5557 vf0.305 0.244 0.183 0 k-7778.3442 8601.7568 m-7778.5527 8601.7002 -7778.4937 8603.8193 Y-7777.4785 8604.6475 L-7775.8359 8603.833 L-7774.9375 8604.1631 L-7775.1426 8603.0303 -7775.6094 8602.127 -7776.1934 8601.7139 C-7776.6094 8601.6602 -7777.8745 8601.6895 -7778.3442 8601.7568 CfU0.115 0.092 0.069 0 k-7774.9375 8604.1631 m-7775.8359 8603.833 L-7777.4785 8604.6475 L-7778.4937 8603.8193 L-7778.7935 8604.5977 -7778.7993 8604.7031 V-7777.5137 8605.2686 -7776.1831 8605.6289 -7774.8398 8605.8154 C-7774.79 8605.6172 -7774.7842 8605.4326 -7774.79 8605.2266 c-7774.7998 8604.8613 -7774.8218 8604.5078 -7774.9375 8604.1631 Cf0.41 0.328 0.246 0 k-7755.4512 8600.2861 m-7757.3774 8601.5322 -7766.3862 8606.9873 -7774.8398 8605.8154 C-7774.9038 8606.9824 -7775.2485 8607.9805 -7775.75 8608.5527 C-7775.1895 8608.5518 L-7754.7402 8611.6455 L-7755.0366 8601.3154 L-7755.0728 8600.0361 L-7755.2046 8600.127 -7755.4512 8600.2861 vf0.395 0.316 0.237 0 k-7778.8105 8605.3271 m-7778.7715 8606.71 -7778.3481 8607.9072 -7777.7495 8608.5537 C-7775.6807 8608.5527 L-7775.1782 8607.9805 -7774.8218 8606.9609 -7774.8398 8605.8154 C-7776.1831 8605.6289 -7777.5137 8605.2686 -7778.7993 8604.7031 C-7778.8105 8604.9072 -7778.8169 8605.1143 -7778.8105 8605.3271 cfUu0 0 0 0.11 k-7749.2642 8599.0908 m-7748.2407 8598.9248 L-7749.2642 8599.0908 L-7749.2642 8599.0908 Lf0 0 0 0.34 k-7755.4814 8599.2041 m-7755.0728 8600.0361 L-7753.6714 8599.8076 L-7752.5234 8599.6201 L-7750.6758 8599.3193 L-7749.2642 8599.0908 L-7748.2407 8598.9248 L-7748.2954 8598.6064 -7748.3672 8598.3877 -7748.4648 8598.3096 C-7755.4814 8599.2041 Lf0 0 0 0.32 k-7753.8042 8604.0967 m-7754.0415 8611.751 L-7748.7144 8611.8896 L-7747.7266 8608.4033 -7748.1816 8604.0439 V-7753.8042 8604.0967 LfU0.025 0.02 0.015 0 k-7747.3223 8601.2744 m-7744.3735 8601.8096 -7741.2402 8602.0498 -7738.3159 8601.251 c-7738.2856 8601.2393 -7738.2754 8601.208 -7738.2871 8601.1865 c-7738.2881 8601.1553 -7738.3198 8601.1455 -7738.3418 8601.1455 c-7741.2422 8601.9541 -7744.3755 8601.7139 -7747.3042 8601.168 c-7747.3262 8601.1689 -7747.3574 8601.1807 -7747.3672 8601.2119 c-7747.3662 8601.2334 -7747.3555 8601.2646 -7747.3223 8601.2744 c-7747.3223 8601.2744 lf-7745.8374 8600.1973 m-7745.7295 8600.2686 -7745.6313 8600.3838 -7745.5234 8600.3916 c-7741.7886 8600.7217 -7738.1631 8600.6709 -7734.4746 8600.5537 c-7734.4526 8600.5537 -7734.4209 8600.5322 -7734.4214 8600.5098 c-7734.4214 8600.4775 -7734.4551 8600.458 -7734.4766 8600.458 c-7737.3223 8600.5713 -7740.1401 8600.5889 -7743.0039 8600.4248 c-7743.9336 8600.3662 -7744.9082 8600.6289 -7745.7778 8600.1104 c-7745.7993 8600.1006 -7745.8306 8600.1006 -7745.8506 8600.123 c-7745.8618 8600.1455 -7745.8594 8600.1768 -7745.8374 8600.1973 c-7745.8374 8600.1973 lf-7741.3735 8602.2568 m-7739.5098 8603.5693 -7737.3022 8604.2637 -7735.1001 8604.7754 c-7735.0679 8604.7861 -7735.0474 8604.7744 -7735.0366 8604.7432 c-7735.0273 8604.71 -7735.0488 8604.6904 -7735.0703 8604.6797 c-7737.2617 8604.1553 -7739.4595 8603.4922 -7741.3105 8602.1689 c-7741.3433 8602.1494 -7741.3755 8602.1602 -7741.3848 8602.1826 c-7741.4058 8602.2041 -7741.3945 8602.2354 -7741.3735 8602.2568 c-7741.3735 8602.2568 lf-7746.9321 8608.9463 m-7744.7295 8609.46 -7742.5298 8609.9199 -7740.2798 8610.165 c-7740.2598 8610.1738 -7740.2295 8610.1533 -7740.2295 8610.1318 c-7740.2183 8610.0986 -7740.2407 8610.0674 -7740.2729 8610.0684 c-7742.5122 8609.7705 -7744.7305 8609.4072 -7746.9126 8608.8398 c-7746.9351 8608.8408 -7746.9673 8608.8525 -7746.9766 8608.8838 c-7746.9751 8608.9053 -7746.9648 8608.9375 -7746.9321 8608.9463 c-7746.9321 8608.9463 lf-7746.4395 8608.25 m-7744.3457 8609.0869 -7742.1016 8608.8193 -7739.9023 8608.8525 c-7739.8706 8608.8506 -7739.8496 8608.8281 -7739.8506 8608.7979 c-7739.8521 8608.7646 -7739.8735 8608.7441 -7739.8945 8608.7441 c-7742.0928 8608.7334 -7744.3374 8608.9893 -7746.4209 8608.1426 c-7746.4434 8608.1436 -7746.4746 8608.1553 -7746.4834 8608.1865 c-7746.4834 8608.208 -7746.4722 8608.2402 -7746.4395 8608.25 c-7746.4395 8608.25 lf-7745.7075 8609.5938 m-7744.3833 8609.6416 -7743.1504 8609.4365 -7741.8271 8609.0986 c-7741.3594 8608.9893 -7740.9199 8609.1162 -7740.4609 8609.1025 c-7739.8975 8609.0869 l-7739.8745 8609.085 -7739.8633 8609.0752 -7739.8535 8609.0625 c-7739.8345 8609.042 -7739.8442 8609.0098 -7739.8662 8608.9893 c-7740.0625 8608.835 l-7740.0742 8608.835 -7740.0854 8608.8252 -7740.0962 8608.8252 c-7740.5 8608.8369 l-7741.9551 8609.0811 -7743.4575 8609.5615 -7744.8926 8608.9639 c-7744.9258 8608.9541 -7744.9575 8608.9756 -7744.9673 8608.9971 c-7744.9673 8609.0293 -7744.9551 8609.0498 -7744.9336 8609.0605 c-7743.6475 8609.5889 -7742.1714 8609.3643 -7740.8818 8608.9434 c-7740.0918 8608.9326 L-7740.1245 8608.9229 L-7739.9282 8609.0762 L-7739.8984 8608.9785 L-7740.4639 8608.9961 l-7740.9321 8609.0303 -7741.3848 8608.873 -7741.8398 8608.9932 c-7743.1543 8609.3506 -7744.3975 8609.5146 -7745.71 8609.4873 c-7745.7422 8609.4893 -7745.7642 8609.5098 -7745.7617 8609.543 c-7745.7617 8609.5752 -7745.7402 8609.5957 -7745.7075 8609.5938 c-7745.7075 8609.5938 lf-7746.5718 8609.9502 m-7743.8711 8611.1104 -7740.9023 8610.46 -7738.1279 8610.0713 c-7737.7832 8610.1777 l-7737.7617 8610.1885 -7737.7417 8610.1768 -7737.7207 8610.1553 c-7737.71 8610.1338 -7737.7217 8610.1025 -7737.7422 8610.0918 c-7738.0801 8609.8994 l-7740.7754 8609.2822 -7743.5391 8609.6709 -7746.2715 8609.6748 c-7746.3022 8609.6768 -7746.3232 8609.6982 -7746.3223 8609.7295 c-7746.3198 8609.7617 -7746.2983 8609.7822 -7746.2681 8609.7822 c-7743.6738 8609.8252 -7741.0303 8609.333 -7738.4727 8609.9639 c-7737.7954 8610.1777 L-7737.7534 8610.0811 L-7738.1406 8609.9756 l-7740.9058 8610.332 -7743.8418 8611.0234 -7746.5313 8609.8643 c-7746.5537 8609.8545 -7746.5854 8609.8545 -7746.5962 8609.8877 c-7746.6055 8609.9082 -7746.6055 8609.9404 -7746.5718 8609.9502 c-7746.5718 8609.9502 lf-7743.6895 8603.2842 m-7742.3945 8603.79 -7740.9834 8603.5361 -7739.6802 8603.2334 c-7739.6475 8603.2314 -7739.6367 8603.21 -7739.6382 8603.1777 c-7739.6504 8603.1465 -7739.6714 8603.1357 -7739.7031 8603.1377 c-7740.9985 8603.4199 -7742.3774 8603.7041 -7743.6504 8603.1865 c-7743.6826 8603.1768 -7743.7144 8603.1885 -7743.7246 8603.2207 c-7743.7222 8603.2422 -7743.7114 8603.2744 -7743.6895 8603.2842 c-7743.6895 8603.2842 lf-7744.1401 8605.1104 m-7742.2266 8605.5791 -7740.3145 8605.9932 -7738.3555 8606.2139 c-7738.3242 8606.2236 -7738.3022 8606.2021 -7738.2935 8606.1689 c-7738.2954 8606.1494 -7738.3159 8606.1182 -7738.3374 8606.1182 c-7740.2959 8605.8975 -7742.2095 8605.4717 -7744.1206 8605.0029 c-7744.1426 8605.0049 -7744.1738 8605.0156 -7744.1831 8605.0479 c-7744.1831 8605.0693 -7744.1719 8605.1006 -7744.1401 8605.1104 c-7744.1401 8605.1104 lf-7744.9336 8607.5244 m-7742.4995 8608.3506 -7739.8647 8607.9434 -7737.3457 8607.9775 c-7737.3135 8607.9775 -7737.2935 8607.9561 -7737.2935 8607.9229 c-7737.2954 8607.9014 -7737.3159 8607.8818 -7737.3481 8607.8818 c-7739.8574 8607.8057 -7742.4814 8608.2744 -7744.8945 8607.416 c-7744.9282 8607.417 -7744.9595 8607.4287 -7744.9688 8607.4502 c-7744.9678 8607.4814 -7744.9561 8607.5137 -7744.9336 8607.5244 c-7744.9336 8607.5244 lf-7740.0542 8608.7393 m-7738.6582 8609.4346 -7737.0503 8609.293 -7735.5342 8609.3564 c-7735.5024 8609.3545 -7735.4824 8609.333 -7735.4824 8609.3018 c-7735.4834 8609.2793 -7735.5054 8609.249 -7735.5366 8609.249 c-7737.0137 8609.1104 -7738.6489 8609.4121 -7740.0039 8608.6514 c-7740.0366 8608.6426 -7740.0679 8608.6533 -7740.0786 8608.6758 c-7740.0879 8608.6973 -7740.0767 8608.7295 -7740.0542 8608.7393 c-7740.0542 8608.7393 lf-7739.3418 8605.3145 m-7738.3926 8605.2871 -7737.4336 8605.2598 -7736.4839 8605.2314 c-7736.4526 8605.2314 -7736.4312 8605.21 -7736.4336 8605.1777 c-7736.4336 8605.1455 -7736.4551 8605.125 -7736.4878 8605.126 c-7737.4375 8605.1533 -7738.3975 8605.1807 -7739.3457 8605.208 c-7739.3774 8605.208 -7739.3975 8605.2314 -7739.3975 8605.2617 c-7739.3975 8605.293 -7739.3745 8605.3154 -7739.3418 8605.3145 c-7739.3418 8605.3145 lf-7737.1592 8602.9258 m-7736.6895 8602.9541 -7736.2095 8602.9609 -7735.7383 8602.9814 c-7735.7168 8602.9805 -7735.6855 8602.958 -7735.6865 8602.9258 c-7735.6875 8602.8936 -7735.71 8602.874 -7735.7417 8602.874 c-7736.2114 8602.877 -7736.6816 8602.8271 -7737.1514 8602.8281 c-7737.1831 8602.8193 -7737.2031 8602.8408 -7737.2134 8602.874 c-7737.2129 8602.9053 -7737.1914 8602.9258 -7737.1592 8602.9258 c-7737.1592 8602.9258 lf-7744.9702 8605.124 m-7744.5688 8605.3994 -7744.1255 8605.5693 -7743.6455 8605.6406 c-7743.6113 8605.6504 -7743.5918 8605.6279 -7743.5806 8605.6064 c-7743.5703 8605.5752 -7743.5928 8605.5439 -7743.6152 8605.5439 c-7744.0854 8605.4609 -7744.5176 8605.292 -7744.9209 8605.0361 c-7744.9521 8605.0273 -7744.9849 8605.0273 -7744.9946 8605.0605 c-7745.0039 8605.083 -7744.9922 8605.1143 -7744.9702 8605.124 c-7744.9702 8605.124 lf-7746.1904 8610.9746 m-7743.7344 8611.417 -7741.2983 8611.8906 -7738.7993 8611.6162 c-7738.7778 8611.6162 -7738.7568 8611.5938 -7738.7578 8611.5615 c-7738.7578 8611.5303 -7738.7798 8611.5088 -7738.8022 8611.5088 c-7741.2915 8611.7617 -7743.7344 8611.374 -7746.1719 8610.8672 c-7746.1934 8610.8682 -7746.2256 8610.8799 -7746.2344 8610.9111 c-7746.2344 8610.9326 -7746.2222 8610.9648 -7746.1904 8610.9746 c-7746.1904 8610.9746 lf0.195 0.156 0.117 0 k-7746.1665 8599.5342 m-7743.7969 8599.1563 -7741.4058 8599.2373 -7739.0298 8599.4785 c-7738.9985 8599.4775 -7738.9766 8599.4561 -7738.9766 8599.4248 c-7738.9785 8599.4033 -7739 8599.3721 -7739.0215 8599.3721 c-7741.4082 8599.1318 -7743.7915 8599.0498 -7746.1694 8599.4287 c-7746.2026 8599.4287 -7746.2222 8599.4502 -7746.2217 8599.4834 c-7746.2207 8599.5146 -7746.1992 8599.5361 -7746.1665 8599.5342 c-7746.1665 8599.5342 lf0.335 0.268 0.201 0 k-7745.4351 8599.001 m-7742.9282 8599.0049 -7740.4146 8599.167 -7737.9185 8598.7861 c-7737.8862 8598.7842 -7737.8647 8598.7617 -7737.8662 8598.7314 c-7737.8672 8598.6982 -7737.8896 8598.6777 -7737.9209 8598.6777 c-7740.4185 8599.0586 -7742.9297 8598.9189 -7745.4375 8598.8945 c-7745.46 8598.8945 -7745.4814 8598.917 -7745.4785 8598.9482 c-7745.4785 8598.9814 -7745.4575 8599.002 -7745.4351 8599.001 c-7745.4351 8599.001 lf0.205 0.164 0.123 0 k-7746.9766 8599.2158 m-7745.5039 8599.5576 -7744.0078 8599.292 -7742.5391 8599.1104 c-7742.5078 8599.1104 -7742.4873 8599.0869 -7742.4995 8599.0557 c-7742.5 8599.0234 -7742.5215 8599.0029 -7742.5537 8599.0146 c-7744.0103 8599.1738 -7745.4961 8599.4727 -7746.9473 8599.1084 c-7746.9785 8599.1104 -7747.0103 8599.1221 -7747.0098 8599.1533 c-7747.0195 8599.1738 -7746.9985 8599.2061 -7746.9766 8599.2158 c-7746.9766 8599.2158 lf-7740.3535 8598.6846 m-7739.1978 8598.8105 -7738.0273 8598.7041 -7736.8926 8598.4785 c-7736.8711 8598.4678 -7736.8506 8598.4463 -7736.8618 8598.4141 c-7736.8623 8598.3926 -7736.8945 8598.3721 -7736.9165 8598.3838 c-7738.0503 8598.6289 -7739.1914 8598.6826 -7740.3462 8598.5781 c-7740.3794 8598.5791 -7740.3984 8598.6006 -7740.4087 8598.6221 c-7740.4082 8598.6543 -7740.3862 8598.6748 -7740.3535 8598.6846 c-7740.3535 8598.6846 lf0.335 0.268 0.201 0 k-7747.2681 8601.3369 m-7745.9214 8602.0781 -7744.3066 8601.4873 -7742.8555 8601.5313 c-7742.8223 8601.5303 -7742.8022 8601.5088 -7742.8022 8601.4746 c-7742.8042 8601.4551 -7742.8262 8601.4346 -7742.8574 8601.4346 c-7744.2886 8601.3799 -7745.8823 8601.9697 -7747.2168 8601.2402 c-7747.2383 8601.2295 -7747.2695 8601.2412 -7747.2915 8601.2637 c-7747.3008 8601.2842 -7747.2886 8601.3174 -7747.2681 8601.3369 c-7747.2681 8601.3369 lf-7745.8945 8603.4541 m-7743.6719 8603.9346 -7741.3896 8603.5059 -7739.1504 8603.4521 c-7739.1177 8603.4512 -7739.0977 8603.4287 -7739.0977 8603.3975 c-7739.1001 8603.376 -7739.1318 8603.3564 -7739.1519 8603.3564 c-7741.3833 8603.3672 -7743.6519 8603.8701 -7745.8755 8603.3457 c-7745.8975 8603.3457 -7745.9287 8603.3584 -7745.9375 8603.3916 c-7745.9375 8603.4121 -7745.9258 8603.4434 -7745.8945 8603.4541 c-7745.8945 8603.4541 lf-7740.0273 8600.0303 m-7738.3496 8600.8584 -7736.4995 8601.3916 -7734.6035 8601.251 c-7734.5718 8601.251 -7734.5513 8601.2285 -7734.5527 8601.1953 c-7734.5527 8601.165 -7734.5742 8601.1436 -7734.6074 8601.1455 c-7736.4814 8601.3057 -7738.3198 8600.75 -7739.9873 8599.9434 c-7740.0078 8599.9346 -7740.0415 8599.9346 -7740.0503 8599.9678 c-7740.0615 8599.9893 -7740.0615 8600.0205 -7740.0273 8600.0303 c-7740.0273 8600.0303 lfu0.5 0.85 1 0.45 k-7893 8606.7979 m-7893.0254 8607.377 -7892.5664 8608.0762 -7891.1675 8608.8799 C-7890.8521 8608.8926 -7889.3945 8608.9121 -7887.0889 8608.9385 C-7887.0889 8606.7119 L-7889.1382 8606.7354 -7891.1177 8606.7754 -7893 8606.7979 Cf-7892.5088 8605.8584 m-7887.0889 8605.7344 L-7887.0889 8604.7041 L-7890.6445 8604.8486 L-7891.8145 8605.2197 -7892.5088 8605.8584 Vf0.5 0.85 1 0.32 k-7887.0889 8605.7148 m-7892.4746 8605.833 L-7892.7695 8606.1045 -7892.9849 8606.4463 -7893 8606.8174 C-7891.1177 8606.7959 -7889.1382 8606.7744 -7887.0889 8606.751 C-7887.0889 8605.7148 Lf0.5 0.85 1 0.45 k-7782.1504 8605.5068 m-7860.3584 8606.4307 -7887.1079 8606.7314 V-7887.1079 8608.9385 L-7870.8145 8609.1221 -7811.9902 8609.5967 Y-7777.7495 8608.5537 L-7778.4575 8605.458 L-7782.1504 8605.5068 Lf0.5 0.85 1 0.12 k-7887.1079 8604.7041 m-7887.1079 8605.7344 L-7778.4258 8603.8896 L-7778.3833 8601.7529 L-7811.6553 8601.6025 L-7887.1079 8604.7041 Lfu0.065 0.052 0.039 0 k-7755.0728 8600.0361 m-7755.0366 8601.3154 L-7755.2954 8600.0059 L-7773.8975 8604.5449 L-7774.9375 8604.1631 L-7774.8794 8604.4951 -7774.8398 8604.8457 -7774.8306 8605.2119 c-7774.8242 8605.418 -7774.8281 8605.6182 -7774.8398 8605.8154 C-7766.3862 8606.9873 -7756.9634 8602.5615 -7755.0366 8601.3154 C-7754.7402 8611.6455 L-7754.0415 8611.751 L-7753.8042 8604.0967 L-7748.1816 8604.0439 L-7748.0898 8601.9033 -7748.0718 8599.9111 -7748.2407 8598.9248 C-7755.0728 8600.0361 Lf0.4 0.7 1 0 k-7778.4575 8605.4775 m-7778.4258 8603.8701 L-7887.1079 8605.7148 L-7887.1079 8606.751 L-7860.3584 8606.4502 -7778.4575 8605.4775 YfUU0.025 0.02 0.015 0 k-7742.7344 8607.9189 m-7742.7344 8607.9521 -7742.7129 8607.9717 -7742.6802 8607.9717 c-7739.6714 8608.0029 -7737.4214 8607.835 -7734.4155 8607.749 C-7734.4087 8607.6553 L-7737.3262 8607.7598 -7739.7607 8607.8975 -7742.6841 8607.8643 C-7742.7168 8607.8662 -7742.7358 8607.8877 -7742.7344 8607.9189 Cf-7734.3994 8607.6553 m-7734.4082 8607.6338 L-7734.4087 8607.6553 L-7734.4063 8607.6553 -7734.4033 8607.6553 -7734.3994 8607.6553 Cf-7738.4487 8606.3135 m-7739.4458 8606.1816 -7740.3394 8606.6553 -7741.2114 8607.0869 C-7741.2441 8607.0977 -7741.2534 8607.1289 -7741.2422 8607.1602 C-7741.2305 8607.1826 -7741.1982 8607.1914 -7741.1777 8607.1807 c-7740.3262 8606.7197 -7739.4312 8606.3096 -7738.4678 8606.4092 c-7737.1079 8606.5518 -7735.9038 8607.2646 -7734.5254 8607.3418 C-7734.4463 8607.249 L-7736.04 8607.1553 -7736.8647 8606.5127 -7738.4487 8606.3135 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 50)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7892 8610.8896 m-7764.8774 8610.8896 L-7764.8774 8563.3047 L-7892 8563.3047 L-7892 8610.8896 Lnu*u0 O0.9529 0.949 0.1961 0.0745 k-7865.7935 8595.3066 m-7865.8232 8595.1563 L-7867.9849 8589.2529 -7868.9438 8586.5273 -7869.2754 8585.1777 c-7869.3657 8585.1777 L-7869.6953 8586.4971 -7870.7754 8589.2246 -7872.9673 8595.1563 c-7872.9966 8595.3066 L-7865.7935 8595.3066 lf1 D-7876.1182 8603.8574 m-7877.6191 8607.4268 -7878.3994 8609.5986 -7876.1182 8609.8066 c-7876.1182 8610.8574 L-7878.6992 8610.8271 -7881.5806 8610.8066 -7884.3418 8610.8066 c-7888.0649 8610.8066 -7890.5273 8610.8271 -7892 8610.8574 c-7892 8609.8066 L-7890.1064 8609.5986 -7889.0542 8607.457 -7881.5513 8590.3926 c-7869.6953 8563.3047 L-7867.8638 8563.3047 L-7856.1582 8590.3926 L-7848.8047 8607.3975 -7847.7246 8609.5986 -7845.8887 8609.8066 c-7845.8887 8610.8574 L-7847.5142 8610.8271 -7849.9165 8610.8066 -7853.5767 8610.8066 c-7856.5488 8610.8066 -7859.6694 8610.8271 -7862.7026 8610.8574 c-7862.7026 8609.8066 L-7860.4814 8609.5986 -7861.3218 8607.3975 -7862.7617 8603.8574 C-7876.1182 8603.8574 lf*U*u0 D-7821.0762 8578.9697 m-7821.0762 8575.3613 -7823.3535 8572.9834 -7827.1294 8572.9834 c-7828.2383 8572.9834 -7829.0767 8573.1055 -7829.5273 8573.1338 c-7829.5273 8585.4375 L-7828.8672 8585.498 -7828.2085 8585.498 -7827.7295 8585.498 c-7826.2002 8585.498 -7824.7026 8585.0166 -7823.6841 8584.2949 c-7822.3945 8583.4229 -7821.0762 8581.6777 -7821.0762 8579.0313 C-7821.0762 8578.9697 lf1 D-7840.0806 8583.2822 m-7840.0806 8567.5342 -7840.0806 8565.3184 -7842.5425 8565.168 c-7842.5425 8564.208 L-7841.0425 8564.1484 -7838.3174 8564.0889 -7835.5664 8564.0586 c-7833.6538 8563.998 -7830.3945 8563.9082 -7828.1479 8563.8672 c-7824.5825 8563.8672 -7821.5854 8564.3154 -7819.0049 8565.1514 c-7814.3535 8566.7373 -7809.9702 8570.7422 -7809.9702 8578.5498 c-7809.9702 8583.6328 -7812.4014 8587.209 -7814.5034 8588.9502 c-7815.5835 8589.9111 -7816.8135 8590.7217 -7817.7744 8591.2021 c-7817.7744 8591.3525 L-7815.5234 8594.3809 -7813.6025 8596.9521 -7807.3906 8605.5322 c-7805.5 8607.9541 -7803.9102 8609.6279 -7802.7402 8609.8672 c-7802.7402 8610.8896 L-7804.6602 8610.8896 -7807 8610.7744 -7809.1294 8610.7744 c-7811.3511 8610.7744 -7812.8521 8610.8896 -7814.4424 8610.8896 c-7815.6729 8610.8896 -7816.7241 8610.8301 -7817.5039 8610.1621 c-7821.0151 8604.7373 -7824.9121 8598.6455 -7828.1182 8593.6025 c-7828.5078 8593.6025 -7828.9575 8593.6025 -7829.5273 8593.6025 c-7829.5273 8596.1738 L-7829.5273 8607.416 -7829.4375 8609.6582 -7827.1895 8609.8672 c-7827.1895 8610.8594 L-7828.6279 8610.8301 -7831.9194 8610.8047 -7834.6992 8610.8047 c-7837.9287 8610.8047 -7840.8921 8610.8301 -7842.5122 8610.8594 c-7842.5122 8609.8672 L-7840.0518 8609.6582 -7840.0806 8607.416 -7840.0806 8590.4814 C-7840.0806 8583.2822 lf*U*u0 D-7789.4561 8590.4824 m-7789.4561 8607.3838 -7789.4561 8609.5381 -7792.2832 8609.8672 C-7792.2832 8610.8594 l-7790.3887 8610.8301 -7787.0542 8610.8047 -7783.7822 8610.8047 c-7780.6294 8610.8047 -7777.5688 8610.8301 -7775.2881 8610.8594 C-7775.2881 8609.8672 l-7778.2578 8609.8672 -7778.2881 8607.4141 -7778.2881 8590.4824 C-7778.2881 8573.041 L-7770.8193 8573.041 l-7767.9995 8573.041 -7766.5298 8573.8496 -7765.8994 8576.1514 C-7764.9072 8576.1514 l-7764.9072 8571.3594 -7764.8774 8567.3047 -7764.8774 8564.0605 c-7769.3486 8564.0908 -7774.7485 8564.1201 -7780.0601 8564.1201 C-7787.7446 8564.1201 l-7792.5537 8564.1201 -7797.9966 8564.0908 -7802.9614 8564.0605 c-7802.9614 8567.2744 -7802.9326 8571.3594 -7802.9326 8576.1514 C-7801.9072 8576.1514 l-7801.3657 8573.999 -7799.7715 8573.041 -7796.9438 8573.041 C-7789.4561 8573.041 l-7789.4561 8590.4824 Lf*UUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 6)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7892.75 8587.8896 m-7892.75 8611.8896 L-7882.75 8611.8896 L-7882.75 8587.8896 L-7892.75 8587.8896 Ln0 Ap0 O1 g-7882.75 8589.8896 m-7883.0703 8589.8896 -7883.3857 8589.9082 -7883.6982 8589.9375 c-7885.5879 8590.1152 -7887.3198 8590.8242 -7888.7559 8591.9072 c-7890.2529 8593.0361 -7891.4199 8594.5713 -7892.0942 8596.3535 c-7892.5122 8597.4541 -7892.75 8598.6426 -7892.75 8599.8896 c-7892.75 8601.752 -7892.2319 8603.4893 -7891.3457 8604.9814 c-7889.6025 8607.917 -7886.4102 8609.8896 -7882.75 8609.8896 C-7882.75 8589.8896 Lf0 R0 G1 J 1 j 0.5 w-7882.75 8609.5713 m-7885.7793 8608.6152 -7888.6074 8606.957 -7891.3457 8604.9814 CS-7882.75 8603.9385 m-7885.8999 8601.5322 -7888.9575 8598.8018 -7892.0942 8596.3535 CS-7888.7559 8591.9072 m-7886.6904 8592.998 -7884.7017 8594.3564 -7882.75 8595.8457 CS-7883.6982 8589.9375 m-7883.3809 8590.0205 -7883.0635 8590.1045 -7882.75 8590.2041 CS-7888.7559 8591.9072 m-7887.3193 8590.8252 -7885.5879 8590.1152 -7883.6982 8589.9375 CS-7892.0942 8596.3535 m-7892.5122 8597.4541 -7892.75 8598.6426 -7892.75 8599.8896 c-7892.75 8601.752 -7892.2314 8603.4893 -7891.3457 8604.9814 CS-7882.75 8589.8896 m-7883.0703 8589.8896 -7883.3857 8589.9082 -7883.6982 8589.9375 CS-7888.7559 8591.9072 m-7890.2529 8593.0361 -7891.4199 8594.5713 -7892.0942 8596.3535 CS-7891.3457 8604.9814 m-7889.6025 8607.917 -7886.4102 8609.8896 -7882.75 8609.8896 CSU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 62)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7893 8611.8896 m-7893 8573.6201 L-7854.7305 8573.6201 L-7854.7305 8611.8896 L-7893 8611.8896 Ln0 O1 0.14 0.09 0 k-7854.7305 8594.793 m-7854.7305 8586.2305 L-7893 8586.2305 L-7893 8594.793 L-7854.7305 8594.793 Lf-7854.7305 8597.9863 m-7854.7305 8597.3125 L-7893 8597.3125 L-7893 8597.9863 L-7854.7305 8597.9863 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 63)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7893 8611.8896 m-7893 8573.6201 L-7854.7305 8573.6201 L-7854.7305 8611.8896 L-7893 8611.8896 Ln0 O1 0.14 0.09 0 k-7854.7305 8590.7158 m-7854.7305 8599.2793 L-7867.3408 8599.2793 L-7867.3408 8611.8896 L-7875.9038 8611.8896 L-7875.9063 8590.7158 L-7875.9038 8590.7158 L-7875.9038 8590.7148 L-7854.7305 8590.7158 Lf-7854.7305 8588.1973 m-7878.4233 8588.1973 L-7878.4233 8611.8896 L-7879.0967 8611.8896 L-7879.0977 8587.5225 L-7854.7305 8587.5225 L-7854.7305 8588.1973 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 64)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7893 8611.8887 m-7893 8573.6182 L-7854.7305 8573.6182 L-7854.7305 8611.8887 L-7893 8611.8887 Ln0 O1 0.14 0.09 0 k-7854.7305 8586.2285 m-7880.3896 8586.2285 L-7880.3896 8611.8887 L-7871.8262 8611.8896 L-7871.8262 8594.793 L-7854.7305 8594.793 L-7854.7305 8586.2285 Lf-7854.7305 8597.3105 m-7869.3081 8597.3105 L-7869.3081 8611.8896 L-7868.6338 8611.8896 L-7868.6338 8597.9854 L-7854.7305 8597.9854 L-7854.7305 8597.3105 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 65)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7865.0625 8584.3506 m-7892.6025 8584.3506 L-7892.6025 8611.8896 L-7865.0625 8611.8896 L-7865.0625 8584.3506 Ln0 O0 0.55 1 0.12 k-7864.8418 8597.5898 m-7893 8597.5898 L-7893 8598.7148 L-7864.8418 8598.7148 L-7864.8418 8597.5898 Lfu0 0.55 1 0.3 k-7891.9814 8585.4111 m-7892.4102 8587.415 -7891.1865 8591.041 -7888.0874 8594.1406 c-7884.9878 8597.2393 -7881.3457 8598.5498 -7879.3594 8598.0352 C-7879.3594 8598.0352 L-7878.8755 8596.0791 -7880.1519 8592.4014 -7883.25 8589.3037 c-7886.3457 8586.208 -7890.0122 8584.9961 -7891.9814 8585.4111 Cf0 0.39 0.7 0.12 k-7891.9814 8610.8809 m-7892.4102 8608.877 -7891.1865 8605.251 -7888.0874 8602.1514 c-7884.9878 8599.0537 -7881.3457 8597.7432 -7879.3594 8598.2568 C-7879.3594 8598.2568 L-7878.8755 8600.2139 -7880.1519 8603.8906 -7883.25 8606.9893 c-7886.3457 8610.085 -7890.0122 8611.2959 -7891.9814 8610.8809 CfUu0 0.55 1 0.3 k-7878.1782 8610.8809 m-7878.6074 8608.877 -7877.3838 8605.251 -7874.2842 8602.1514 c-7871.1855 8599.0537 -7867.5435 8597.7432 -7865.5576 8598.2568 C-7865.5566 8598.2568 L-7865.0718 8600.2139 -7866.3496 8603.8906 -7869.4473 8606.9893 c-7872.5435 8610.085 -7876.2095 8611.2959 -7878.1782 8610.8809 Cf0 0.39 0.7 0.12 k-7878.1782 8585.4111 m-7878.6074 8587.415 -7877.3838 8591.041 -7874.2842 8594.1406 c-7871.1855 8597.2393 -7867.5435 8598.5498 -7865.5576 8598.0352 C-7865.5566 8598.0352 L-7865.0718 8596.0791 -7866.3496 8592.4014 -7869.4473 8589.3037 c-7872.5435 8586.208 -7876.2095 8584.9961 -7878.1782 8585.4111 CfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 67)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-7865.4609 8583.9746 m-7893 8583.9746 L-7893 8611.5137 L-7865.4609 8611.5137 L-7865.4609 8583.9746 Ln0 O0 0.55 1 0.12 k-7879.7598 8602.252 m-7879.7598 8611.8896 L-7878.6343 8611.8896 L-7878.6343 8602.252 L-7879.7598 8602.252 Lf0 0.55 1 0.3 k-7883.4233 8597.7656 m-7882.3096 8596.0449 -7878.8809 8594.3457 -7874.4966 8594.3457 c-7870.1152 8594.3457 -7866.6138 8595.9961 -7865.5718 8597.7637 C-7865.5718 8597.7637 L-7866.6138 8599.4902 -7870.1152 8601.1865 -7874.4966 8601.1865 c-7878.8755 8601.1865 -7882.3242 8599.4512 -7883.4233 8597.7656 CfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 69)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7865.4609 8584.3506 m-7893 8584.3506 L-7893 8611.8896 L-7865.4609 8611.8896 L-7865.4609 8584.3506 Ln0 O0 0.55 1 0.3 k-7883.4233 8598.1416 m-7882.3096 8596.4209 -7878.8809 8594.7227 -7874.4966 8594.7227 c-7870.1152 8594.7227 -7866.6138 8596.3721 -7865.5718 8598.1387 C-7865.5718 8598.1387 L-7866.6138 8599.8662 -7870.1152 8601.5625 -7874.4966 8601.5625 c-7878.8755 8601.5625 -7882.3242 8599.8271 -7883.4233 8598.1416 CfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 8)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7891.9521 8609.2021 m-7784.7954 8609.2021 L-7784.7954 8595.0752 L-7891.9521 8595.0752 L-7891.9521 8609.2021 Lnu0 O0 0 0 1 k-7890.2832 8608.5127 m-7890.8535 8610.8896 -7890.8184 8606.8936 V-7891.0479 8603.6924 L-7891.6167 8601.3447 L-7891.4502 8599.0127 L-7889.9502 8598.3447 -7873.2832 8597.0127 V-7866.6167 8595.6777 -7857.6167 8595.6777 V-7792.3936 8596.3662 -7787.4912 8597.7744 v-7828.3882 8595.7646 -7830.9688 8596.4014 v-7791.8569 8598.0498 -7788.8545 8599.3213 v-7826.79 8597.4365 -7830.1675 8599.0674 v-7795.2495 8600.7998 -7791.0215 8602.4209 v-7797.7217 8601.7725 -7799.5127 8601.9717 v-7796.3896 8602.46 l-7801.4194 8602.3916 l-7804.3218 8602.0186 l-7796.4521 8603.1318 -7795.9033 8603.6982 v-7792.3154 8603.0205 -7806.5186 8603.2744 v-7840.1177 8599.3447 -7890.2832 8608.5127 Vf/BBAccumRotation (5.805971) XT0 R0 0 0 0.5 K0.025 w-7891.9502 8598.0127 m-7871.6675 8596.1846 -7851.9727 8595.1104 v-7809.1514 8595.3916 -7804.5737 8595.79 v-7792.1631 8595.9209 -7784.7959 8596.917 vS/BBAccumRotation (5.805971) XT0 0 0 1 K-7829.8369 8595.2979 m-7833.2959 8594.917 -7859.2607 8595.1689 Y-7869.6274 8595.0498 -7891.9502 8598.0127 YS/BBAccumRotation (5.805971) XT-7828.9873 8598.5537 m-7798.3608 8599.4717 -7791.6606 8600.1221 vS/BBAccumRotation (5.805971) XT0 0 0 0.5 K-7837.6201 8603.0938 m-7802.3706 8604.5068 -7799.4058 8605.0303 vS/BBAccumRotation (5.805971) XTUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 83)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7892 8610.8252 m-7678.4009 8610.8252 L-7678.4009 8603.0234 L-7892 8603.0234 L-7892 8610.8252 Ln0 O0 0 0 1 k-7892 8606.9248 m-7881.9858 8609.417 -7875.1875 8610.7646 -7863.2007 8610.8252 c-7850.2183 8610.8896 -7785.2002 8610.8252 y-7720.1816 8610.8896 -7707.2002 8610.8252 v-7695.2129 8610.7646 -7688.4155 8609.417 -7678.4009 8606.9248 C-7688.4155 8604.4326 -7695.2129 8603.085 -7707.2002 8603.0234 c-7720.1816 8602.959 -7785.2002 8603.0234 y-7850.2183 8602.959 -7863.2007 8603.0234 v-7875.1875 8603.085 -7881.9858 8604.4326 -7892 8606.9248 CfU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 50 pt \203t\203\211\203b\203g/ Adobe Calligra) -(phic Brush Tool/ 25 pt \211~\214`/ Adobe Calligraphic Brush Tool/ 20) -( pt \221\310\211~\214`/ Adobe Calligraphic Brush Tool/ 12 pt \221\310\211~\214`/ Adobe) -( Calligraphic Brush Tool/ 10 pt \221\310\211~\214`/ Adobe Calligraphic Bru) -(sh Tool/ 6 pt \203t\203\211\203b\203g/ Adobe ArtOnPath Brush Tool/ \225\266\216\232/ Adob) -(e ArtOnPath Brush Tool/ \203X\203g\203\215\201[\203N - \220\346\215\327/ Adobe ArtOnPath Bru) -(sh Tool/ \203u\203\211\203V/ Adobe ArtOnPath Brush Tool/ \203}\201[\203J\201[/ Adobe A) -(rtOnPath Brush Tool/ \226\356\210\363/ Adobe Scatter Brush Tool/ \220\257/ Adobe) -( Scatter Brush Tool/ \203C\203`\203S/ Adobe Scatter Brush Tool/ \211\346\202\321\202\345\202) -(\244/ Adobe Scatter Brush Tool/ \203e\203\223\203g\203E\203\200\203V/ Adobe Scatter Brush) -( Tool/ \215g\227t/ Adobe Scatter Brush Tool/ \214\242\202\314\221\253\220\325/ Adobe Pattern) -(OnPath Brush Tool/ \203\215\201[\203v/ Adobe PatternOnPath Brush Tool/ \214\216\214) -(j\216\367/ Adobe PatternOnPath Brush Tool/ \223\361\217d\220\374/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(10 pt \621\710\611~\614`)(1 1 19 15 15 130 130 2 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(12 pt \621\710\611~\614`)(1 7 17 45 45 0 0 2 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(20 pt \621\710\611~\614`)(1 20 20 20 100 40 80 0 2 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(25 pt \611~\614`)(1 10 40 100 100 0 0 2 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(50 pt \603t\603\611\603b\603g)(1 40 60 0 0 44 44 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(6 pt \603t\603\611\603b\603g)(1 4 8 10 10 90 90 2 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(\603X\603g\603\615\601[\603N - \620\746\615\727)(1 / New Pattern 83/ / / / / 1 0 0 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(\603u\603\611\603V)(1 / New Pattern 5/ / / / / 1 0.5 0.85 1 0.45 /  0 0 1 0 1 0 0 ) -(0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(\603}\601[\603J\601[)(1 / New Pattern 8/ / / / / 0 0 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(\625\666\616\632)(1 / New Pattern 50/ / / / / 1 0.952941 0.94902 0.196078 0.0745) -(098 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(\626\756\610\763)(1 / New Pattern 45/ / / / / 5 0.898039 0 0 /  2 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(\603\615\601[\603v)(1 / New Pattern 1/ / / New Pattern 3/ New Pattern 6/ 5 0 0 0 /) -(  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(\623\761\617d\620\774)(1 / New Pattern 62/ New Pattern 63/ New Pattern 64/ / / 1 1 0.) -(14 0.09 0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(\614\616\614j\616\767)(1 / New Pattern 65/ New Pattern 42/ New Pattern 67/ / New Patt) -(ern 69/ 1 0 0.55 1 0.3 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(\603C\603`\603S)(1 /New Pattern 37/ 1 0 0 0 1 / 0 0.803911 1 1 0.803911 1 1 -0.) -(5 0.5 1 -75 75.419 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(\603e\603\623\603g\603E\603\600\603V)(1 /New Pattern 10/ 5 0.898039 0 0 / 0 1 1 0 0.803911 1.2 1 -1.) -(55 1.55 1 -180 180 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(\620\657)(1 /New Pattern 2/ 0 1 / 1 0.5 1 1 0.25 1 1 -0.5 0.5 1 0 0 0 0 ) -(0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(\614\642\602\714\621\653\620\725)(1 /New Pattern 41/ 1 0 0 0 1 / 0 1 1 0 1 1 0 0 0 0 -90 -90 0 1) -( 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(\611\746\602\721\602\745\602\644)(1 /New Pattern 36/ 1 0.025 0.1 0.475 0 / 0 1 1 0 0.401676 1 1 ) -(-1.06145 1.06 1 -180 180 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(\615g\627t)(1 /New Pattern 34/ 1 0.0745 0.9 0.9019 0.18 / 0 0.602793 1 1 0) -(.1 1 1 -1 1 1 -180 180 1 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([\603\614\603W\603X\603g\603\614\601[\603V\603\607\603\623]) 0 Xs([\603\614\603W\603X\603g\603\614\601[\603V\603\607\603\623])Pc0 0 0 0 k(C=0 M=0 Y=0 K=0)Pc0 0 0 1 k(C=0 M=0 Y=0 K=100)Pc0 0.1 1 0 k(C=0 M=10 Y=100 K=0)Pc0 0.5 0 0 k(C=0 M=50 Y=0 K=0)Pc0 0.5 1 0 k(C=0 M=50 Y=100 K=0)Pc1 0.55 1 0 k(C=100 M=55 Y=100 K=0)Pc1 0.9 0.1 0 k(C=100 M=90 Y=10 K=0)Pc0.15 1 1 0 k(C=15 M=100 Y=100 K=0)Pc0.45 0.9 0 0 k(C=45 M=90 Y=0 K=0)Pc0.5 0.4 0.3 0 k(C=50 M=40 Y=30 K=0)Pc0.5 0.85 1 0 k(C=50 M=85 Y=100 K=0)Pc0.75 0.05 1 0 k(C=75 M=5 Y=100 K=0)Pc0.75 0.9 0 0 k(C=75 M=90 Y=0 K=0)Pc0.8 0.05 0 0 k(C=80 M=5 Y=0 K=0)PcBb2 (\603u\603\611\603b\603N\601A\603z\603\617\603C\603g) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(\603u\603\611\603b\603N\601A\603z\603\617\603C\603g)PcBb2 (\603N\603\615\603\600) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(\603N\603\615\603\600)PcBb2 (\623\770) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(\623\770)PcBb0 0 0 0 Bh2 (\603C\603G\603\615\601[\601\625\603I\603\614\603\623\603W) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(\603C\603G\603\615\601[\601\625\603I\603\614\603\623\603W)Pc(\603\614\603\623\603K) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(\603\614\603\623\603K)Pc(\616\606\602\723\602\724\602\653) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(\616\606\602\723\602\724\602\653)Pc(\627\616\602\677\627t) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(\627\616\602\677\627t)Pc(\603X\603g\603\611\603C\603v) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(\603X\603g\603\611\603C\603v)Pc0.75 0.85 0 0 k(\620V\613K\603J\603\611\601[\603X\603E\603H\603b\603` 2)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 1) Ln0 A1 Ap0 R0 0 0 1 K0 J 0 j 0.3118 w 4 M []0 d0 XR503.1494 286.2988 m92.126 286.2988 L92.126 555.5894 L503.1494 555.5894 L503.1494 286.2988 Lsuu*u0 Ap1 D0 O0.75 0.85 0 0 k1 w187.9785 452.9927 m170.2637 452.9927 155.9023 438.6313 155.9023 420.9155 c155.9023 403.2021 170.2637 388.8389 187.9785 388.8389 c205.6934 388.8389 220.0547 403.2021 220.0547 420.9155 c220.0547 438.6313 205.6934 452.9927 187.9785 452.9927 cf0 D187.9785 390.2061 m171.0176 390.2061 157.2695 403.9561 157.2695 420.9155 c157.2695 437.8765 171.0176 451.6265 187.9785 451.6265 c204.9395 451.6265 218.6895 437.8765 218.6895 420.9155 c218.6895 403.9561 204.9395 390.2061 187.9785 390.2061 cf*Uu186.2148 421.9351 m186.2148 419.8979 L187.9785 418.8789 L189.7432 419.8979 L189.7432 421.9351 L187.9785 422.9546 L186.2148 421.9351 Lf178.3564 417.1309 m177.623 416.709 177.3711 415.7715 177.7949 415.0371 c178.2188 414.3047 179.1563 414.0527 179.8896 414.4766 C183.6357 416.6387 L183.6357 418.4102 L182.1025 419.2949 L178.3564 417.1309 Lf189.5117 426.8159 m189.5117 431.1421 L189.5117 431.9897 188.8262 432.6753 187.9785 432.6753 c187.1328 432.6753 186.4453 431.9897 186.4453 431.1421 C186.4453 426.8159 L187.9785 425.9312 L189.5117 426.8159 Lf*u1 D187.9785 448.1621 m172.9316 448.1621 160.7324 435.9634 160.7324 420.9155 c160.7324 405.8682 172.9316 393.6709 187.9785 393.6709 c203.0254 393.6709 215.2246 405.8682 215.2246 420.9155 c215.2246 435.9634 203.0254 448.1621 187.9785 448.1621 cf0 D209.8486 407.7715 m203.1113 409.0313 L203.0303 409.0469 202.9512 409.0762 202.875 409.1191 c202.6465 409.252 202.5117 409.4824 202.4922 409.7266 c202.4316 410.4785 202.0156 411.1875 201.3125 411.5918 c200.6885 411.9551 199.9688 411.998 199.3379 411.7773 C199.3379 411.7754 L197.7344 411.2129 195.9053 411.3262 194.3184 412.2422 C192.3213 413.3945 L192.3213 400.2842 L189.5117 400.2842 L189.5117 415.0176 L187.9785 415.9023 L186.4453 415.0156 L186.4453 400.2842 L183.6357 400.2842 L183.6357 413.3945 L181.6387 412.2422 L180.0527 411.3262 178.2227 411.2129 176.6201 411.7754 C176.6201 411.7773 L175.9893 411.998 175.2695 411.9551 174.6445 411.5918 c173.9424 411.1875 173.5254 410.4785 173.4648 409.7266 c173.4453 409.4824 173.3105 409.252 173.082 409.1191 c173.0068 409.0762 172.9277 409.0469 172.8467 409.0313 C166.1074 407.7715 L165.9141 407.7305 165.708 407.8184 165.6035 407.998 c165.499 408.1797 165.5273 408.4004 165.6582 408.5488 C170.1191 413.7559 L170.1729 413.8164 170.2383 413.8711 170.3145 413.916 c170.541 414.0469 170.8086 414.0488 171.0303 413.9434 c171.7119 413.6191 172.5352 413.625 173.2373 414.0313 c173.8613 414.3926 174.2598 414.9941 174.3838 415.6504 C174.3828 415.6504 L174.6963 417.3203 175.709 418.8477 177.2959 419.7637 C179.293 420.9155 L167.9395 427.4712 L169.3457 429.9048 L182.1025 422.5386 L183.6357 423.4243 L183.6357 425.1948 L170.8779 432.5601 L172.2832 434.9937 L183.6357 428.439 L183.6357 430.7456 L183.6357 432.5767 184.4531 434.2183 185.7422 435.3237 C185.7422 435.3237 L186.25 435.7593 186.5713 436.4048 186.5713 437.1265 c186.5713 437.937 186.1641 438.6528 185.5439 439.0815 C185.543 439.0815 L185.3418 439.2202 185.209 439.4526 185.209 439.7163 c185.209 439.8032 185.2246 439.8862 185.25 439.9653 C187.5293 446.4302 L187.5918 446.6177 187.7695 446.7529 187.9785 446.7529 c188.1875 446.7529 188.3652 446.6177 188.4287 446.4302 C190.7061 439.9653 L190.7324 439.8862 190.7471 439.8032 190.7471 439.7163 c190.7471 439.4526 190.6152 439.2202 190.4131 439.0815 C190.4131 439.0815 L189.793 438.6528 189.3867 437.937 189.3867 437.1265 c189.3867 436.4048 189.707 435.7593 190.2148 435.3237 C190.2148 435.3237 L191.5049 434.2183 192.3213 432.5767 192.3213 430.7456 C192.3213 428.439 L203.6748 434.9937 L205.0801 432.5601 L192.3213 425.1948 L192.3213 423.4243 L193.8555 422.5386 L206.6133 429.9048 L208.0176 427.4712 L196.665 420.9155 L198.6621 419.7637 L200.248 418.8477 201.2617 417.3203 201.5742 415.6504 C201.5742 415.6504 L201.6973 414.9941 202.0957 414.3926 202.7207 414.0313 c203.4229 413.625 204.2461 413.6191 204.9268 413.9434 c205.1484 414.0488 205.416 414.0469 205.6445 413.916 c205.7188 413.8711 205.7852 413.8164 205.8379 413.7559 C210.2988 408.5488 L210.4297 408.4004 210.459 408.1797 210.3535 407.998 c210.249 407.8184 210.043 407.7305 209.8486 407.7715 Cf*U197.6016 417.1309 m193.8555 419.2949 L192.3213 418.4082 L192.3213 416.6387 L196.0684 414.4766 L196.8018 414.0527 197.7383 414.3047 198.1621 415.0371 c198.5859 415.7715 198.335 416.709 197.6016 417.1309 CfUUu392.4492 427.1558 m382.2012 427.1558 L382.2012 447.6465 L372.8398 447.6465 L372.8398 394.1846 L382.2012 394.1846 L382.2012 417.6621 L392.4492 417.6621 L392.4492 394.1846 L402.0186 394.1846 L402.0186 447.6465 L392.4492 447.6465 L392.4492 427.1558 Lf248.3359 447.6465 m241.2627 426.8188 L234.8633 447.6465 L225.5244 447.6465 L235.917 414.8652 L235.917 394.1846 L246.3145 394.1846 L246.3145 415.9297 L257.0879 447.6465 L248.3359 447.6465 Lf311.3389 422.2163 m306.1367 447.6465 L291.5215 447.6465 L291.5215 394.1846 L299.9023 394.1846 L299.9023 434.4858 L307.0566 399.4521 L314.8838 399.4521 L321.2295 435.0522 L321.2295 394.1846 L331.0547 394.1846 L331.0547 447.6465 L315.8252 447.6465 L311.3389 422.2163 Lf*u1 D430.5439 447.6465 m416.0684 447.6465 L406.2949 394.1846 L414.9619 394.1846 L417.0352 406.626 L427.8125 406.626 L429.8232 394.1846 L439.3662 394.1846 L430.5439 447.6465 Lf0 D418.5215 415.5391 m422.5049 439.4468 L426.3711 415.5391 L418.5215 415.5391 Lf*U*u1 D345.1055 447.6465 m335.332 394.1846 L343.999 394.1846 L346.0713 406.626 L356.8486 406.626 L358.8613 394.1846 L368.4023 394.1846 L359.583 447.6465 L345.1055 447.6465 Lf0 D347.5557 415.5391 m351.543 439.4468 L355.4072 415.5391 L347.5557 415.5391 Lf*U*u1 D263.7852 447.6465 m254.0137 394.1846 L262.6797 394.1846 L264.752 406.626 L275.5293 406.626 L277.542 394.1846 L287.084 394.1846 L278.2627 447.6465 L263.7852 447.6465 Lf0 D266.2373 415.5391 m270.2227 439.4468 L274.0889 415.5391 L266.2373 415.5391 Lf*UUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF